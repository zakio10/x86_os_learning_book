     1                                  ;********************************************************************************************************
     2                                  ;マクロ
     3                                  ;********************************************************************************************************
     4                                  %include        "..\include\define.s"
     1                              <1> SECT_SIZE   equ     (512)                   ;セクタサイズ
     2                              <1> 
     3                              <1> BOOT_LOAD   equ     0x7C00                  ;ブートプログラムのロード位置
     4                              <1> BOOT_END    equ     (BOOT_LOAD + BOOT_SIZE)
     5                              <1> BOOT_SIZE   equ     (1024 * 8)              ;ブートコードサイズ
     6                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     7                              <1> 
     8                              <1> KERNEL_LOAD equ     0x0010_1000
     9                              <1> KERNEL_SIZE equ     (1024*8)                ;カーネルサイズ
    10                              <1> KERNEL_SECT equ     (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
     5                                  %include        "..\include\macro.s"
     1                              <1> struc drive
     2 00000000 <res 00000002>      <1>         .no         resw    1           ;ドライブ番号
     3 00000002 <res 00000002>      <1>         .cyln       resw    1           ;シリンダ
     4 00000004 <res 00000002>      <1>         .head       resw    1           ;ヘッド
     5 00000006 <res 00000002>      <1>         .sect       resw    1           ;セクタ
     6                              <1> endstruc
     7                              <1> 
     8                              <1> %macro  cdecl   1-*.nolist
     9                              <1> 
    10                              <1>     %rep    %0 - 1
    11                              <1>         push    %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1>     %rotate -1
    15                              <1> 
    16                              <1>         call    %1
    17                              <1> 
    18                              <1>     %if 1 < %0
    19                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    20                              <1>     %endif
    21                              <1> 
    22                              <1> %endmacro
     6                                  
     7                                          ORG     KERNEL_LOAD                             ;カーネルのロードアドレス
     8                                  
     9                                  [BITS 32]
    10                                  ;********************************************************************************************************
    11                                  ;エントリポイント
    12                                  ;********************************************************************************************************
    13                                  kernel:
    14                                          ;---------------------------------------
    15                                          ;フォントアドレスを取得
    16                                          ;---------------------------------------
    17 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ;ESI = 0x7C00 + 512
    18 00000005 0FB706                          movzx   eax, word [esi + 0]             ;EAX = [ESI + 0] //セグメント
    19 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ;EBX = [ESI + 2] //オフセット
    20 0000000C C1E004                          shl     eax, 4                          ;EAX << 4;
    21 0000000F 01D8                            add     eax, ebx                        ;EAX += EBX;
    22 00000011 A3[5C000000]                    mov     [FONT_ADR], eax                 ;FONT_ADR[0] = EAX;
    23                                  
    24                                          ;---------------------------------------
    25                                          ;文字の表示
    26                                          ;---------------------------------------
    27 00000016 6A0D6A3FE88C010000-             cdecl   draw_font, 63, 13
    27 0000001F 6683C408           
    28                                  
    29                                          ;---------------------------------------
    30                                          ;文字列の表示
    31                                          ;---------------------------------------
    32 00000023 68[49000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0   ;draw_str();
    32 0000002B 00006A0E6A19E8B801-
    32 00000034 00006683C410       
    33                                  
    34                                          ;---------------------------------------
    35                                          ;カラーバーの表示
    36                                          ;---------------------------------------
    37 0000003A 6A046A3FE8F4010000-             cdecl   draw_color_bar, 63, 4
    37 00000043 6683C408           
    38                                  
    39                                          ;---------------------------------------
    40                                          ;処理の終了
    41                                          ;---------------------------------------
    42 00000047 EBFE                            jmp     $                               ;while(1) //無限ループ
    43                                  
    44                                  
    45                                  
    46 00000049 2048656C6C6F2C206B-     .s0:    db      " Hello, kernel! ", 0
    46 00000052 65726E656C212000   
    47                                  
    48 0000005A 00<rept>                ALIGN   4, db   0
    49 0000005C 00000000                FONT_ADR:       dd      0
    50                                  
    51                                  ;********************************************************************************************************
    52                                  ;モジュール
    53                                  ;********************************************************************************************************
    54                                  %include        "..\modules\protect\vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   + 8| 読み込みプレーン(0~3)
     6                              <1>                                             ;   + 4| IP(戻り番号)
     7 00000060 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     8 00000061 89E5                <1>         mov    ebp, esp                     ;------|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 00000063 6650                <1>         push    ax
    14 00000065 6652                <1>         push    dx
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ;読み込みプレーンの選択
    18                              <1>         ;---------------------------------------
    19 00000067 8A6508              <1>         mov     ah, [ebp + 8]                   ;AH = プレーンの選択(3 = 輝度, 2~0 = RGB)
    20 0000006A 80E403              <1>         and     ah, 0x03                        ;AH &= 0x03; //余計なビットをマスク
    21 0000006D B004                <1>         mov     al, 0x04                        ;AL = 読み込みマップ選択レジスタ
    22 0000006F 66BACE03            <1>         mov     dx, 0x03CE                      ;DX = グラフィックス制御ポート
    23 00000073 66EF                <1>         out     dx, ax                          ;//ポート出力
    24                              <1>         
    25                              <1>         ;---------------------------------------
    26                              <1>         ;レジスタの復帰
    27                              <1>         ;---------------------------------------
    28 00000075 665A                <1>         pop     dx
    29 00000077 6658                <1>         pop     ax
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ;スタックフレームの破棄
    33                              <1>         ;---------------------------------------
    34 00000079 89EC                <1>         mov     esp, ebp
    35 0000007B 5D                  <1>         pop     ebp
    36                              <1> 
    37 0000007C C3                  <1>         ret
    38                              <1> 
    39                              <1> vga_set_write_plane:
    40                              <1>         ;-----------------------------------
    41                              <1>         ;スタックフレームの構築
    42                              <1>         ;-----------------------------------
    43                              <1>                                             ;   + 8| 書き込みプレーン
    44                              <1>                                             ;   + 4| IP(戻り番号)
    45 0000007D 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    46 0000007E 89E5                <1>         mov    ebp, esp                     ;------|---------
    47                              <1> 
    48                              <1>         ;-----------------------------------
    49                              <1>         ;レジスタの保存
    50                              <1>         ;-----------------------------------
    51 00000080 6650                <1>         push    ax
    52 00000082 6652                <1>         push    dx
    53                              <1> 
    54                              <1>         ;---------------------------------------
    55                              <1>         ;読み込みプレーンの選択
    56                              <1>         ;---------------------------------------
    57 00000084 8A6508              <1>         mov     ah, [ebp + 8]                   ;AH = プレーンの選択(3 = 輝度, 2~0 = RGB)
    58 00000087 80E40F              <1>         and     ah, 0x0F                        ;AH &= 0x03; //余計なビットをマスク
    59 0000008A B002                <1>         mov     al, 0x02                        ;AL = 読み込みマップ選択レジスタ
    60 0000008C 66BAC403            <1>         mov     dx, 0x03C4                      ;DX = グラフィックス制御ポート
    61 00000090 66EF                <1>         out     dx, ax                          ;//ポート出力
    62                              <1>         
    63                              <1>         ;---------------------------------------
    64                              <1>         ;レジスタの復帰
    65                              <1>         ;---------------------------------------
    66 00000092 665A                <1>         pop     dx
    67 00000094 6658                <1>         pop     ax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ;スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 00000096 89EC                <1>         mov     esp, ebp
    73 00000098 5D                  <1>         pop     ebp
    74                              <1> 
    75 00000099 C3                  <1>         ret
    76                              <1> 
    77                              <1> vram_font_copy:
    78                              <1>         ;-----------------------------------
    79                              <1>         ;スタックフレームの構築
    80                              <1>         ;-----------------------------------
    81                              <1>                                             ;EBP+20| 描画色
    82                              <1>                                             ;EBP+16| 出力プレーン(1つのプレーンのみをビットで指定)
    83                              <1>                                             ;EBP+12| VRAMアドレス
    84                              <1>                                             ;   + 8| FONTアドレス
    85                              <1>                                             ;   + 4| IP(戻り番号)
    86 0000009A 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    87 0000009B 89E5                <1>         mov    ebp, esp                     ;------|---------
    88                              <1> 
    89                              <1>         ;-----------------------------------
    90                              <1>         ;レジスタの保存
    91                              <1>         ;-----------------------------------
    92 0000009D 50                  <1>         push    eax
    93 0000009E 53                  <1>         push    ebx
    94 0000009F 51                  <1>         push    ecx
    95 000000A0 57                  <1>         push    edi
    96 000000A1 52                  <1>         push    edx
    97 000000A2 56                  <1>         push    esi
    98                              <1> 
    99                              <1>         ;---------------------------------------
   100                              <1>         ;引数を変数に代入
   101                              <1>         ;---------------------------------------
   102 000000A3 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = フォントアドレス;
   103 000000A6 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = VRAMアドレス;
   104 000000A9 0FB64510            <1>         movzx   eax, byte [ebp +16]             ;EAX = プレーン(ビット指定);
   105 000000AD 0FB75D14            <1>         movzx   ebx, word [ebp +20]             ;EBX = 描画色
   106                              <1> 
   107                              <1>         ;---------------------------------------
   108                              <1>         ;マスクデータを作成(プレーンと景色が一致時に0xFFに。不一致時に0x00に。)
   109                              <1>         ;---------------------------------------
   110 000000B1 84C7                <1>         test    bh, al                          ;ZF = (背景色 & プレーン)
   111 000000B3 0F94C6              <1>         setz    dh                              ;if(ZF == 1){ DH = 0x00; }else{ DH = 0x01;}
   112 000000B6 FECE                <1>         dec     dh                              ;DH--; // 0xFF or 0x00
   113                              <1> 
   114 000000B8 84C3                <1>         test    bl, al                          ;ZF = (前景色 & プレーン);
   115 000000BA 0F94C2              <1>         setz    dl                              ;if(ZF == 1){ DL = 0x00; }else{ DL = 0x01;}
   116 000000BD FECA                <1>         dec     dl                              ;DL--; //0xFF or 0x00
   117                              <1> 
   118                              <1>         ;---------------------------------------
   119                              <1>         ;16ビットフォントのコピー
   120                              <1>         ;---------------------------------------
   121 000000BF FC                  <1>         cld                                     ;DF = 0; //アドレス加算
   122                              <1> 
   123 000000C0 B910000000          <1>         mov     ecx, 16                         ;ECX = 16; //16ドット
   124                              <1> .10L:                                           ;do
   125                              <1>                                                 ;{
   126                              <1>         ;---------------------------------------
   127                              <1>         ;フォントマスクの作成
   128                              <1>         ;---------------------------------------
   129 000000C5 AC                  <1>         lodsb                                   ;   AL = *ESI++; //フォント
   130 000000C6 88C4                <1>         mov     ah, al                          ;   AH = AL;
   131 000000C8 F6D4                <1>         not     ah                              ;   AH ~= AH; //!フォント(ビット反転)
   132                              <1> 
   133                              <1>         ;---------------------------------------
   134                              <1>         ;前景色
   135                              <1>         ;---------------------------------------
   136 000000CA 20D0                <1>         and     al, dl                          ;   AL = 前景色 & フォント;
   137                              <1> 
   138                              <1>         ;---------------------------------------
   139                              <1>         ;背景色
   140                              <1>         ;---------------------------------------
   141 000000CC F7C310000000        <1>         test    ebx, 0x0010                     ;if(透過モード)
   142 000000D2 7404                <1>         jz      .11F                            ;{
   143 000000D4 2227                <1>         and     ah, [edi]                       ;   AH = !フォント & [EDI] //現在値
   144 000000D6 EB02                <1>         jmp     .11E                            ;}
   145                              <1> .11F:                                           ;else
   146                              <1>                                                 ;{
   147 000000D8 20F4                <1>         and     ah, dh                          ;   AH = !フォント & 背景色
   148                              <1> .11E:                                           ;}
   149                              <1> 
   150                              <1>         ;---------------------------------------
   151                              <1>         ;前景色と背景色を合成
   152                              <1>         ;---------------------------------------
   153 000000DA 08E0                <1>         or  al, ah                              ;   AL = 背景 | 前景;
   154                              <1> 
   155                              <1>         ;---------------------------------------
   156                              <1>         ;新しい値を出力（VRAMに代入)
   157                              <1>         ;---------------------------------------
   158 000000DC 8807                <1>         mov     [edi], al                       ;   [EDI] = AL; //プレーンに書き込む
   159                              <1> 
   160 000000DE 83C750              <1>         add     edi, 80                         ;   EDI += 80;
   161 000000E1 E2E2                <1>         loop    .10L                            ;}while(--ECX);
   162                              <1> .10E:
   163                              <1>         ;---------------------------------------
   164                              <1>         ;レジスタの復帰
   165                              <1>         ;---------------------------------------
   166 000000E3 5E                  <1>         pop     esi
   167 000000E4 5A                  <1>         pop     edx
   168 000000E5 5F                  <1>         pop     edi
   169 000000E6 59                  <1>         pop     ecx
   170 000000E7 5B                  <1>         pop     ebx
   171 000000E8 58                  <1>         pop     eax
   172                              <1> 
   173                              <1>         ;---------------------------------------
   174                              <1>         ;スタックフレームの破棄
   175                              <1>         ;---------------------------------------
   176 000000E9 89EC                <1>         mov     esp, ebp
   177 000000EB 5D                  <1>         pop     ebp
   178                              <1> 
   179 000000EC C3                  <1>         ret
    55                                  %include        "..\modules\protect\draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +20| 文字
     6                              <1>                                             ;   +16| 描画色
     7                              <1>                                             ;   +12| 行(0~29)
     8                              <1>                                             ;   + 8| 列(0~79)
     9                              <1>                                             ;   + 4| IP(戻り番号)
    10 000000ED 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    11 000000EE 89E5                <1>         mov    ebp, esp                     ;------|---------
    12                              <1> 
    13                              <1>         ;-----------------------------------
    14                              <1>         ;レジスタの保存
    15                              <1>         ;-----------------------------------
    16 000000F0 53                  <1>         push    ebx
    17 000000F1 57                  <1>         push    edi
    18 000000F2 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;コピー元フォントアドレスを設定
    22                              <1>         ;---------------------------------------
    23 000000F3 0FB67514            <1>         movzx   esi, byte [ebp +20]             ;CL = 文字コード;
    24 000000F7 C1E604              <1>         shl     esi, 4                          ;CL *= 16; //1文字16バイト
    25 000000FA 0335[5C000000]      <1>         add     esi, [FONT_ADR]                 ;ESI = フォントアドレス;
    26                              <1> 
    27                              <1>         ;---------------------------------------
    28                              <1>         ;コピー先アドレスを取得
    29                              <1>         ;adr = 0xA0000 + (640 / 8 * 16) * y + x
    30                              <1>         ;---------------------------------------
    31 00000100 8B7D0C              <1>         mov     edi, [ebp +12]                  ;Y(行)
    32 00000103 C1E708              <1>         shl     edi, 8                          ;EDI = Y * 256;
    33 00000106 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]  ;EDI = Y * 4 + Y;
    34 0000010D 037D08              <1>         add     edi, [ebp + 8]                  ;X(列)
    35                              <1> 
    36                              <1>         ;---------------------------------------
    37                              <1>         ;1文字文のフォントを出力
    38                              <1>         ;---------------------------------------
    39 00000110 0FB75D10            <1>         movzx   ebx, word [ebp +16]             ; //表示色
    40                              <1> 
    41 00000114 6A03E845FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03        ;//読み込みプレーン:輝度(I)
    41 0000011D C404                <1>
    42 0000011F 6A08E857FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08       ;//書き込みプレーン:輝度(I)
    42 00000128 C404                <1>
    43 0000012A 536A085756E866FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    43 00000133 FF6683C410          <1>
    44                              <1>         
    45 00000138 6A02E821FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02        ;//読み込みプレーン:赤(R)
    45 00000141 C404                <1>
    46 00000143 6A04E833FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04       ;//書き込みプレーン:赤(R)
    46 0000014C C404                <1>
    47 0000014E 536A045756E842FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    47 00000157 FF6683C410          <1>
    48                              <1> 
    49 0000015C 6A01E8FDFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01        ;//読み込みプレーン:緑(G)
    49 00000165 C404                <1>
    50 00000167 6A02E80FFFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02       ;//書き込みプレーン:緑(G)
    50 00000170 C404                <1>
    51 00000172 536A025756E81EFFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    51 0000017B FF6683C410          <1>
    52                              <1> 
    53 00000180 6A00E8D9FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00        ;//読み込みプレーン:青(B)
    53 00000189 C404                <1>
    54 0000018B 6A01E8EBFEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01       ;//書き込みプレーン:青(B)
    54 00000194 C404                <1>
    55 00000196 536A015756E8FAFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    55 0000019F FF6683C410          <1>
    56                              <1> 
    57                              <1>         ;---------------------------------------
    58                              <1>         ;レジスタの復帰
    59                              <1>         ;---------------------------------------
    60 000001A4 5E                  <1>         pop     esi
    61 000001A5 5F                  <1>         pop     edi
    62 000001A6 5B                  <1>         pop     ebx
    63                              <1> 
    64                              <1>         ;---------------------------------------
    65                              <1>         ;スタックフレームの破棄
    66                              <1>         ;---------------------------------------
    67 000001A7 89EC                <1>         mov     esp, ebp
    68 000001A9 5D                  <1>         pop     ebp
    69                              <1> 
    70 000001AA C3                  <1>         ret
    56                                  %include        "..\modules\protect\draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 000001AB 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 000001AC 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 000001AE 50                  <1>         push    eax
    15 000001AF 53                  <1>         push    ebx
    16 000001B0 51                  <1>         push    ecx
    17 000001B1 57                  <1>         push    edi
    18 000001B2 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;コピー元フォントアドレスを設定
    22                              <1>         ;---------------------------------------
    23 000001B3 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = X(列)
    24 000001B6 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y(行)
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;コピー先アドレスを取得
    28                              <1>         ;---------------------------------------
    29 000001B9 B900000000          <1>         mov     ecx, 0                          ;for(ECX = 0;
    30 000001BE 81F900010000        <1> .10L:   cmp     ecx, 256                        ;    ECX < 256;
    31 000001C4 731F                <1>         jae     .10E                            ;
    32                              <1>                                                 ;    ECX++)
    33                              <1>                                                 ;{
    34                              <1>         ;---------------------------------------
    35                              <1>         ;表示する桁位置を計算
    36                              <1>         ;---------------------------------------
    37 000001C6 89C8                <1>         mov     eax, ecx                        ;   EAX = ECX;
    38 000001C8 83E00F              <1>         and     eax, 0x0F                       ;   EAX &= 0x0F;
    39 000001CB 01F0                <1>         add     eax, esi                        ;   EAX += X;
    40                              <1>         ;---------------------------------------
    41                              <1>         ;表示する行位置を計算
    42                              <1>         ;---------------------------------------
    43 000001CD 89CB                <1>         mov     ebx, ecx                        ;   EBX = ECX;
    44 000001CF C1EB04              <1>         shr     ebx, 4                          ;   EBX /= 16;
    45 000001D2 01FB                <1>         add     ebx, edi                        ;   EBX += Y;
    46                              <1>         
    47 000001D4 516A075350E80FFFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx  ;   draw_char();
    47 000001DD FF6683C410          <1>
    48                              <1> 
    49 000001E2 41                  <1>         inc     ecx                             ;   //for(... ECX++)
    50 000001E3 EBD9                <1>         jmp     .10L                            ;
    51                              <1> .10E:                                           ;}
    52                              <1> 
    53                              <1>         ;---------------------------------------
    54                              <1>         ;レジスタの復帰
    55                              <1>         ;---------------------------------------
    56 000001E5 5E                  <1>         pop     esi
    57 000001E6 5F                  <1>         pop     edi
    58 000001E7 59                  <1>         pop     ecx
    59 000001E8 5B                  <1>         pop     ebx
    60 000001E9 58                  <1>         pop     eax
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ;スタックフレームの破棄
    64                              <1>         ;---------------------------------------
    65 000001EA 89EC                <1>         mov     esp, ebp
    66 000001EC 5D                  <1>         pop     ebp
    67                              <1> 
    68 000001ED C3                  <1>         ret
    57                                  %include        "..\modules\protect\draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 000001EE 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 000001EF 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 000001F1 50                  <1>         push    eax
    15 000001F2 53                  <1>         push    ebx
    16 000001F3 51                  <1>         push    ecx
    17 000001F4 52                  <1>         push    edx
    18 000001F5 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;引数を変数に代入
    22                              <1>         ;---------------------------------------
    23 000001F6 8B4D08              <1>         mov     ecx, [ebp + 8]                  ;ECX = 列;
    24 000001F9 8B550C              <1>         mov     edx, [ebp +12]                  ;EDX = 行;
    25 000001FC 0FB75D10            <1>         movzx   ebx, word [ebp + 16]            ;EBX = 表示色;
    26 00000200 8B7514              <1>         mov     esi, [ebp +20]                  ;ESI = 文字列へのアドレス;
    27                              <1> 
    28                              <1>         ;---------------------------------------
    29                              <1>         ;文字列を表示
    30                              <1>         ;---------------------------------------
    31 00000203 FC                  <1>         cld                                     ;DF = 0; //アドレス加算
    32                              <1> .10L:                                           ;do
    33                              <1>                                                 ;{
    34 00000204 AC                  <1>         lodsb                                   ;   AL = *ESI++;
    35 00000205 3C00                <1>         cmp     al, 0                           ;   if(0 == AL)
    36 00000207 7425                <1>         je  .10E                                ;       break;
    37                              <1> 
    38 00000209 50535251E8DBFEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    38 00000212 6683C410            <1>
    39                              <1> 
    40                              <1>         ;---------------------------------------
    41                              <1>         ;文字の表示位置を更新
    42                              <1>         ;---------------------------------------
    43 00000216 41                  <1>         inc     ecx                             ;   ECX++; //列を加算
    44 00000217 83F950              <1>         cmp     ecx, 80                         ;   if(80 <= ECX) //80文字以上?
    45 0000021A 7C10                <1>         jl      .12E                            ;   {
    46 0000021C B900000000          <1>         mov     ecx, 0                          ;       ECX = 0; //列を初期化
    47 00000221 42                  <1>         inc     edx                             ;       EDX++; //行を加算
    48 00000222 83FA1E              <1>         cmp     edx, 30                         ;       if(30 <= EDX) //30行以上?
    49 00000225 7C05                <1>         jl      .12E                            ;       {
    50 00000227 BA00000000          <1>         mov     edx, 0                          ;           EDX = 0;
    51                              <1>                                                 ;       }
    52                              <1> .12E:                                           ;   }
    53 0000022C EBD6                <1>         jmp     .10L                            ;
    54                              <1> .10E:                                           ;}while(1);
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;レジスタの復帰
    58                              <1>         ;---------------------------------------
    59 0000022E 5E                  <1>         pop     esi
    60 0000022F 5A                  <1>         pop     edx
    61 00000230 59                  <1>         pop     ecx
    62 00000231 5B                  <1>         pop     ebx
    63 00000232 58                  <1>         pop     eax
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;スタックフレームの破棄
    67                              <1>         ;---------------------------------------
    68 00000233 89EC                <1>         mov     esp, ebp
    69 00000235 5D                  <1>         pop     ebp
    70                              <1> 
    71 00000236 C3                  <1>         ret
    58                                  %include        "..\modules\protect\draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 00000237 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 00000238 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 0000023A 50                  <1>         push    eax
    15 0000023B 53                  <1>         push    ebx
    16 0000023C 51                  <1>         push    ecx
    17 0000023D 52                  <1>         push    edx
    18 0000023E 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;引数を変数に代入
    22                              <1>         ;---------------------------------------
    23 0000023F 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = X(列)
    24 00000242 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y(行)
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;カラーバーを表示
    28                              <1>         ;---------------------------------------
    29 00000245 B900000000          <1>         mov     ecx, 0                          ;for(ECX = 0;
    30 0000024A 83F910              <1> .10L:   cmp     ecx, 16                         ;    ECX < 16;
    31 0000024D 732E                <1>         jae     .10E
    32                              <1>                                                 ;ECX++)
    33                              <1>                                                 ;{
    34                              <1>         ;---------------------------------------
    35                              <1>         ;表示位置を計算(列)
    36                              <1>         ;---------------------------------------
    37 0000024F 89C8                <1>         mov     eax, ecx                        ;   EAX = ECX;
    38 00000251 83E001              <1>         and     eax, 0x01                       ;   EAX &= 0x01;
    39 00000254 C1E003              <1>         shl     eax, 3                          ;   EAX *= 8; //8文字分乗算
    40 00000257 01F0                <1>         add     eax, esi                        ;   EAX += X;
    41                              <1> 
    42                              <1>         ;---------------------------------------
    43                              <1>         ;表示位置を計算(行)
    44                              <1>         ;---------------------------------------
    45 00000259 89CB                <1>         mov     ebx, ecx                        ;   EBX = ECX;
    46 0000025B D1EB                <1>         shr     ebx, 1                          ;   EBX /= 2;
    47 0000025D 01FB                <1>         add     ebx, edi                        ;   EBX += Y;
    48                              <1> 
    49                              <1>         ;---------------------------------------
    50                              <1>         ;描画色を計算
    51                              <1>         ;---------------------------------------
    52 0000025F 89CA                <1>         mov     edx, ecx                        ;   EDX = ECX;
    53 00000261 D1E2                <1>         shl     edx, 1                          ;   EDX *= 2;
    54 00000263 8B92[8F020000]      <1>         mov     edx, [.t0 + edx]                ;   EDX += Y;
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;カラーバーを表示
    58                              <1>         ;---------------------------------------
    59 00000269 68[86020000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0    ;   draw_str();
    59 00000271 E878FFFFFF6683C410  <1>
    60                              <1> 
    61 0000027A 41                  <1>         inc     ecx                             ;   //for(...ECX++
    62 0000027B EBCD                <1>         jmp     .10L                            ;
    63                              <1> .10E:                                           ;}
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;レジスタの復帰
    67                              <1>         ;---------------------------------------
    68 0000027D 5E                  <1>         pop     esi
    69 0000027E 5A                  <1>         pop     edx
    70 0000027F 59                  <1>         pop     ecx
    71 00000280 5B                  <1>         pop     ebx
    72 00000281 58                  <1>         pop     eax
    73                              <1> 
    74                              <1>         ;---------------------------------------
    75                              <1>         ;スタックフレームの破棄
    76                              <1>         ;---------------------------------------
    77 00000282 89EC                <1>         mov     esp, ebp
    78 00000284 5D                  <1>         pop     ebp
    79                              <1> 
    80 00000285 C3                  <1>         ret
    81                              <1> 
    82                              <1>         ;---------------------------------------
    83                              <1>         ;データ
    84                              <1>         ;---------------------------------------
    85 00000286 202020202020202000  <1> .s0:    db  '        ', 0                       ;8文字分のスペース(表示色だけを変更)
    86                              <1> 
    87 0000028F 00000008            <1> .t0:    dw  0x0000, 0x0800                      ;カラーバーの背景色
    88 00000293 00010009            <1>         dw  0x0100, 0x0900
    89 00000297 0002000A            <1>         dw  0x0200, 0x0A00
    90 0000029B 0003000B            <1>         dw  0x0300, 0x0B00
    91 0000029F 0004000C            <1>         dw  0x0400, 0x0C00
    92 000002A3 0005000D            <1>         dw  0x0500, 0x0D00
    93 000002A7 0006000E            <1>         dw  0x0600, 0x0E00
    94 000002AB 0007000F            <1>         dw  0x0700, 0x0F00
    59                                  
    60                                  ;********************************************************************************************************
    61                                  ;パディング
    62                                  ;********************************************************************************************************
    63 000002AF 00<rept>                        times KERNEL_SIZE - ($ - $$)    db 0    ;パディング
