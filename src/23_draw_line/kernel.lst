     1                                  ;********************************************************************************************************
     2                                  ;マクロ
     3                                  ;********************************************************************************************************
     4                                  %include        "..\include\define.s"
     1                              <1> SECT_SIZE   equ     (512)                   ;セクタサイズ
     2                              <1> 
     3                              <1> BOOT_LOAD   equ     0x7C00                  ;ブートプログラムのロード位置
     4                              <1> BOOT_END    equ     (BOOT_LOAD + BOOT_SIZE)
     5                              <1> BOOT_SIZE   equ     (1024 * 8)              ;ブートコードサイズ
     6                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     7                              <1> 
     8                              <1> KERNEL_LOAD equ     0x0010_1000
     9                              <1> KERNEL_SIZE equ     (1024*8)                ;カーネルサイズ
    10                              <1> KERNEL_SECT equ     (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
     5                                  %include        "..\include\macro.s"
     1                              <1> struc drive
     2 00000000 <res 00000002>      <1>         .no         resw    1           ;ドライブ番号
     3 00000002 <res 00000002>      <1>         .cyln       resw    1           ;シリンダ
     4 00000004 <res 00000002>      <1>         .head       resw    1           ;ヘッド
     5 00000006 <res 00000002>      <1>         .sect       resw    1           ;セクタ
     6                              <1> endstruc
     7                              <1> 
     8                              <1> %macro  cdecl   1-*.nolist
     9                              <1> 
    10                              <1>     %rep    %0 - 1
    11                              <1>         push    %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1>     %rotate -1
    15                              <1> 
    16                              <1>         call    %1
    17                              <1> 
    18                              <1>     %if 1 < %0
    19                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    20                              <1>     %endif
    21                              <1> 
    22                              <1> %endmacro
     6                                  
     7                                          ORG     KERNEL_LOAD                             ;カーネルのロードアドレス
     8                                  
     9                                  [BITS 32]
    10                                  ;********************************************************************************************************
    11                                  ;エントリポイント
    12                                  ;********************************************************************************************************
    13                                  kernel:
    14                                          ;---------------------------------------
    15                                          ;フォントアドレスを取得
    16                                          ;---------------------------------------
    17 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ;ESI = 0x7C00 + 512
    18 00000005 0FB706                          movzx   eax, word [esi + 0]             ;EAX = [ESI + 0] //セグメント
    19 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ;EBX = [ESI + 2] //オフセット
    20 0000000C C1E004                          shl     eax, 4                          ;EAX << 4;
    21 0000000F 01D8                            add     eax, ebx                        ;EAX += EBX;
    22 00000011 A3[B0000000]                    mov     [FONT_ADR], eax                 ;FONT_ADR[0] = EAX;
    23                                  
    24                                          ;---------------------------------------
    25                                          ;文字の表示
    26                                          ;---------------------------------------
    27 00000016 6A0D6A3FE80E020000-             cdecl   draw_font, 63, 13
    27 0000001F 6683C408           
    28                                  
    29                                          ;---------------------------------------
    30                                          ;文字列の表示
    31                                          ;---------------------------------------
    32 00000023 68[9D000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0   ;draw_str();
    32 0000002B 00006A0E6A19E83A02-
    32 00000034 00006683C410       
    33                                  
    34                                          ;---------------------------------------
    35                                          ;カラーバーの表示
    36                                          ;---------------------------------------
    37 0000003A 6A046A3FE876020000-             cdecl   draw_color_bar, 63, 4
    37 00000043 6683C408           
    38                                  
    39                                          ;---------------------------------------
    40                                          ;矩形を描画
    41                                          ;---------------------------------------
    42 00000047 6A0368C800000068C8-             cdecl   draw_rect, 100, 100, 200, 200, 0x03
    42 00000050 0000006A646A64E84A-
    42 00000059 0400006683C414     
    43 00000060 6A0568960000006896-             cdecl   draw_rect, 400, 250, 150, 150, 0x05
    43 00000069 00000068FA00000068-
    43 00000072 90010000E82B040000-
    43 0000007B 6683C414           
    44 0000007F 6A066A64682C010000-             cdecl   draw_rect, 350, 400, 300, 100, 0x06
    44 00000088 6890010000685E0100-
    44 00000091 00E80F0400006683C4-
    44 0000009A 14                 
    45                                  
    46                                          ;---------------------------------------
    47                                          ;処理の終了
    48                                          ;---------------------------------------
    49 0000009B EBFE                            jmp     $                               ;while(1) //無限ループ
    50                                  
    51                                  
    52                                  
    53 0000009D 2048656C6C6F2C206B-     .s0:    db      " Hello, kernel! ", 0
    53 000000A6 65726E656C212000   
    54                                  
    55 000000AE 00<rept>                ALIGN   4, db   0
    56 000000B0 00000000                FONT_ADR:       dd      0
    57                                  
    58                                  ;********************************************************************************************************
    59                                  ;モジュール
    60                                  ;********************************************************************************************************
    61                                  %include        "..\modules\protect\vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   + 8| 読み込みプレーン(0~3)
     6                              <1>                                             ;   + 4| IP(戻り番号)
     7 000000B4 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     8 000000B5 89E5                <1>         mov    ebp, esp                     ;------|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 000000B7 6650                <1>         push    ax
    14 000000B9 6652                <1>         push    dx
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ;読み込みプレーンの選択
    18                              <1>         ;---------------------------------------
    19 000000BB 8A6508              <1>         mov     ah, [ebp + 8]                   ;AH = プレーンの選択(3 = 輝度, 2~0 = RGB)
    20 000000BE 80E403              <1>         and     ah, 0x03                        ;AH &= 0x03; //余計なビットをマスク
    21 000000C1 B004                <1>         mov     al, 0x04                        ;AL = 読み込みマップ選択レジスタ
    22 000000C3 66BACE03            <1>         mov     dx, 0x03CE                      ;DX = グラフィックス制御ポート
    23 000000C7 66EF                <1>         out     dx, ax                          ;//ポート出力
    24                              <1>         
    25                              <1>         ;---------------------------------------
    26                              <1>         ;レジスタの復帰
    27                              <1>         ;---------------------------------------
    28 000000C9 665A                <1>         pop     dx
    29 000000CB 6658                <1>         pop     ax
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ;スタックフレームの破棄
    33                              <1>         ;---------------------------------------
    34 000000CD 89EC                <1>         mov     esp, ebp
    35 000000CF 5D                  <1>         pop     ebp
    36                              <1> 
    37 000000D0 C3                  <1>         ret
    38                              <1> 
    39                              <1> vga_set_write_plane:
    40                              <1>         ;-----------------------------------
    41                              <1>         ;スタックフレームの構築
    42                              <1>         ;-----------------------------------
    43                              <1>                                             ;   + 8| 書き込みプレーン
    44                              <1>                                             ;   + 4| IP(戻り番号)
    45 000000D1 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    46 000000D2 89E5                <1>         mov    ebp, esp                     ;------|---------
    47                              <1> 
    48                              <1>         ;-----------------------------------
    49                              <1>         ;レジスタの保存
    50                              <1>         ;-----------------------------------
    51 000000D4 6650                <1>         push    ax
    52 000000D6 6652                <1>         push    dx
    53                              <1> 
    54                              <1>         ;---------------------------------------
    55                              <1>         ;読み込みプレーンの選択
    56                              <1>         ;---------------------------------------
    57 000000D8 8A6508              <1>         mov     ah, [ebp + 8]                   ;AH = プレーンの選択(3 = 輝度, 2~0 = RGB)
    58 000000DB 80E40F              <1>         and     ah, 0x0F                        ;AH &= 0x03; //余計なビットをマスク
    59 000000DE B002                <1>         mov     al, 0x02                        ;AL = 読み込みマップ選択レジスタ
    60 000000E0 66BAC403            <1>         mov     dx, 0x03C4                      ;DX = グラフィックス制御ポート
    61 000000E4 66EF                <1>         out     dx, ax                          ;//ポート出力
    62                              <1>         
    63                              <1>         ;---------------------------------------
    64                              <1>         ;レジスタの復帰
    65                              <1>         ;---------------------------------------
    66 000000E6 665A                <1>         pop     dx
    67 000000E8 6658                <1>         pop     ax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ;スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 000000EA 89EC                <1>         mov     esp, ebp
    73 000000EC 5D                  <1>         pop     ebp
    74                              <1> 
    75 000000ED C3                  <1>         ret
    76                              <1> 
    77                              <1> vram_font_copy:
    78                              <1>         ;-----------------------------------
    79                              <1>         ;スタックフレームの構築
    80                              <1>         ;-----------------------------------
    81                              <1>                                             ;EBP+20| 描画色
    82                              <1>                                             ;EBP+16| 出力プレーン(1つのプレーンのみをビットで指定)
    83                              <1>                                             ;EBP+12| VRAMアドレス
    84                              <1>                                             ;   + 8| FONTアドレス
    85                              <1>                                             ;   + 4| IP(戻り番号)
    86 000000EE 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    87 000000EF 89E5                <1>         mov    ebp, esp                     ;------|---------
    88                              <1> 
    89                              <1>         ;-----------------------------------
    90                              <1>         ;レジスタの保存
    91                              <1>         ;-----------------------------------
    92 000000F1 50                  <1>         push    eax
    93 000000F2 53                  <1>         push    ebx
    94 000000F3 51                  <1>         push    ecx
    95 000000F4 57                  <1>         push    edi
    96 000000F5 52                  <1>         push    edx
    97 000000F6 56                  <1>         push    esi
    98                              <1> 
    99                              <1>         ;---------------------------------------
   100                              <1>         ;引数を変数に代入
   101                              <1>         ;---------------------------------------
   102 000000F7 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = フォントアドレス;
   103 000000FA 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = VRAMアドレス;
   104 000000FD 0FB64510            <1>         movzx   eax, byte [ebp +16]             ;EAX = プレーン(ビット指定);
   105 00000101 0FB75D14            <1>         movzx   ebx, word [ebp +20]             ;EBX = 描画色
   106                              <1> 
   107                              <1>         ;---------------------------------------
   108                              <1>         ;マスクデータを作成(プレーンと景色が一致時に0xFFに。不一致時に0x00に。)
   109                              <1>         ;---------------------------------------
   110 00000105 84C7                <1>         test    bh, al                          ;ZF = (背景色 & プレーン)
   111 00000107 0F94C6              <1>         setz    dh                              ;if(ZF == 1){ DH = 0x00; }else{ DH = 0x01;}
   112 0000010A FECE                <1>         dec     dh                              ;DH--; // 0xFF or 0x00
   113                              <1> 
   114 0000010C 84C3                <1>         test    bl, al                          ;ZF = (前景色 & プレーン);
   115 0000010E 0F94C2              <1>         setz    dl                              ;if(ZF == 1){ DL = 0x00; }else{ DL = 0x01;}
   116 00000111 FECA                <1>         dec     dl                              ;DL--; //0xFF or 0x00
   117                              <1> 
   118                              <1>         ;---------------------------------------
   119                              <1>         ;16ビットフォントのコピー
   120                              <1>         ;---------------------------------------
   121 00000113 FC                  <1>         cld                                     ;DF = 0; //アドレス加算
   122                              <1> 
   123 00000114 B910000000          <1>         mov     ecx, 16                         ;ECX = 16; //16ドット
   124                              <1> .10L:                                           ;do
   125                              <1>                                                 ;{
   126                              <1>         ;---------------------------------------
   127                              <1>         ;フォントマスクの作成
   128                              <1>         ;---------------------------------------
   129 00000119 AC                  <1>         lodsb                                   ;   AL = *ESI++; //フォント
   130 0000011A 88C4                <1>         mov     ah, al                          ;   AH = AL;
   131 0000011C F6D4                <1>         not     ah                              ;   AH ~= AH; //!フォント(ビット反転)
   132                              <1> 
   133                              <1>         ;---------------------------------------
   134                              <1>         ;前景色
   135                              <1>         ;---------------------------------------
   136 0000011E 20D0                <1>         and     al, dl                          ;   AL = 前景色 & フォント;
   137                              <1> 
   138                              <1>         ;---------------------------------------
   139                              <1>         ;背景色
   140                              <1>         ;---------------------------------------
   141 00000120 F7C310000000        <1>         test    ebx, 0x0010                     ;if(透過モード)
   142 00000126 7404                <1>         jz      .11F                            ;{
   143 00000128 2227                <1>         and     ah, [edi]                       ;   AH = !フォント & [EDI] //現在値
   144 0000012A EB02                <1>         jmp     .11E                            ;}
   145                              <1> .11F:                                           ;else
   146                              <1>                                                 ;{
   147 0000012C 20F4                <1>         and     ah, dh                          ;   AH = !フォント & 背景色
   148                              <1> .11E:                                           ;}
   149                              <1> 
   150                              <1>         ;---------------------------------------
   151                              <1>         ;前景色と背景色を合成
   152                              <1>         ;---------------------------------------
   153 0000012E 08E0                <1>         or  al, ah                              ;   AL = 背景 | 前景;
   154                              <1> 
   155                              <1>         ;---------------------------------------
   156                              <1>         ;新しい値を出力（VRAMに代入)
   157                              <1>         ;---------------------------------------
   158 00000130 8807                <1>         mov     [edi], al                       ;   [EDI] = AL; //プレーンに書き込む
   159                              <1> 
   160 00000132 83C750              <1>         add     edi, 80                         ;   EDI += 80;
   161 00000135 E2E2                <1>         loop    .10L                            ;}while(--ECX);
   162                              <1> .10E:
   163                              <1>         ;---------------------------------------
   164                              <1>         ;レジスタの復帰
   165                              <1>         ;---------------------------------------
   166 00000137 5E                  <1>         pop     esi
   167 00000138 5A                  <1>         pop     edx
   168 00000139 5F                  <1>         pop     edi
   169 0000013A 59                  <1>         pop     ecx
   170 0000013B 5B                  <1>         pop     ebx
   171 0000013C 58                  <1>         pop     eax
   172                              <1> 
   173                              <1>         ;---------------------------------------
   174                              <1>         ;スタックフレームの破棄
   175                              <1>         ;---------------------------------------
   176 0000013D 89EC                <1>         mov     esp, ebp
   177 0000013F 5D                  <1>         pop     ebp
   178                              <1> 
   179 00000140 C3                  <1>         ret
   180                              <1> 
   181                              <1> vram_bit_copy:
   182                              <1>         ;-----------------------------------
   183                              <1>         ;スタックフレームの構築
   184                              <1>         ;-----------------------------------
   185                              <1>                                             ;EBP+20| 描画色
   186                              <1>                                             ;EBP+16| 出力プレーン(1つのプレーンのみをビットで指定)
   187                              <1>                                             ;EBP+12| VRAMアドレス
   188                              <1>                                             ;   + 8| 出力ビットパターン
   189                              <1>                                             ;   + 4| IP(戻り番号)
   190 00000141 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
   191 00000142 89E5                <1>         mov    ebp, esp                     ;------|---------
   192                              <1> 
   193                              <1>         ;-----------------------------------
   194                              <1>         ;レジスタの保存
   195                              <1>         ;-----------------------------------
   196 00000144 50                  <1>         push    eax
   197 00000145 53                  <1>         push    ebx
   198 00000146 57                  <1>         push    edi
   199                              <1> 
   200                              <1>         ;---------------------------------------
   201                              <1>         ;引数を変数に代入
   202                              <1>         ;---------------------------------------
   203 00000147 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = VRAMアドレス;
   204 0000014A 0FB64510            <1>         movzx   eax, byte [ebp +16]             ;EAX = プレーン(ビット指定);
   205 0000014E 0FB75D14            <1>         movzx   ebx, word [ebp +20]             ;EBX = 描画色
   206                              <1> 
   207                              <1>         ;---------------------------------------
   208                              <1>         ;マスクデータを作成(プレーンと景色が一致時に0xFFに。不一致時に0x00に。)
   209                              <1>         ;---------------------------------------
   210 00000152 84C3                <1>         test    bl, al                          ;ZF = (前景色 & プレーン);
   211 00000154 0F94C3              <1>         setz    bl                              ;if(ZF == 1){ DL = 0x00; }else{ DL = 0x01;}
   212 00000157 FECB                <1>         dec     bl                              ;DL--; //0xFF or 0x00
   213                              <1> 
   214                              <1>         ;---------------------------------------
   215                              <1>         ;背景のマスクを作成
   216                              <1>         ;---------------------------------------
   217 00000159 8A4508              <1>         mov     al, [ebp + 8]                   ;AL = 出力ビットパターン;
   218 0000015C 88C4                <1>         mov     ah, al                          ;AH ~= AL; //!出力ビットパターン(ビット反転)
   219 0000015E F6D4                <1>         not     ah
   220                              <1> 
   221                              <1>         ;---------------------------------------
   222                              <1>         ;背景色
   223                              <1>         ;---------------------------------------
   224 00000160 2227                <1>         and     ah, [edi]                       ;AH = 現在値 & !出力ビットパターン
   225 00000162 20D8                <1>         and     al, bl                          ;AL = 表示色 & 出力ビットパターン
   226 00000164 08E0                <1>         or      al, ah                          ;AL |= AH;
   227 00000166 8807                <1>         mov     [edi], al                       ;[EDI] = BL; //プレーンに書き込む
   228                              <1> 
   229                              <1>         ;---------------------------------------
   230                              <1>         ;レジスタの復帰
   231                              <1>         ;---------------------------------------
   232 00000168 5F                  <1>         pop     edi
   233 00000169 5B                  <1>         pop     ebx
   234 0000016A 58                  <1>         pop     eax
   235                              <1> 
   236                              <1>         ;---------------------------------------
   237                              <1>         ;スタックフレームの破棄
   238                              <1>         ;---------------------------------------
   239 0000016B 89EC                <1>         mov     esp, ebp
   240 0000016D 5D                  <1>         pop     ebp
   241                              <1> 
   242 0000016E C3                  <1>         ret
    62                                  %include        "..\modules\protect\draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +20| 文字
     6                              <1>                                             ;   +16| 描画色
     7                              <1>                                             ;   +12| 行(0~29)
     8                              <1>                                             ;   + 8| 列(0~79)
     9                              <1>                                             ;   + 4| IP(戻り番号)
    10 0000016F 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    11 00000170 89E5                <1>         mov    ebp, esp                     ;------|---------
    12                              <1> 
    13                              <1>         ;-----------------------------------
    14                              <1>         ;レジスタの保存
    15                              <1>         ;-----------------------------------
    16 00000172 53                  <1>         push    ebx
    17 00000173 57                  <1>         push    edi
    18 00000174 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;コピー元フォントアドレスを設定
    22                              <1>         ;---------------------------------------
    23 00000175 0FB67514            <1>         movzx   esi, byte [ebp +20]             ;CL = 文字コード;
    24 00000179 C1E604              <1>         shl     esi, 4                          ;CL *= 16; //1文字16バイト
    25 0000017C 0335[B0000000]      <1>         add     esi, [FONT_ADR]                 ;ESI = フォントアドレス;
    26                              <1> 
    27                              <1>         ;---------------------------------------
    28                              <1>         ;コピー先アドレスを取得
    29                              <1>         ;adr = 0xA0000 + (640 / 8 * 16) * y + x
    30                              <1>         ;---------------------------------------
    31 00000182 8B7D0C              <1>         mov     edi, [ebp +12]                  ;Y(行)
    32 00000185 C1E708              <1>         shl     edi, 8                          ;EDI = Y * 256;
    33 00000188 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]  ;EDI = Y * 4 + Y;
    34 0000018F 037D08              <1>         add     edi, [ebp + 8]                  ;X(列)
    35                              <1> 
    36                              <1>         ;---------------------------------------
    37                              <1>         ;1文字文のフォントを出力
    38                              <1>         ;---------------------------------------
    39 00000192 0FB75D10            <1>         movzx   ebx, word [ebp +16]             ; //表示色
    40                              <1> 
    41 00000196 6A03E817FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03        ;//読み込みプレーン:輝度(I)
    41 0000019F C404                <1>
    42 000001A1 6A08E829FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08       ;//書き込みプレーン:輝度(I)
    42 000001AA C404                <1>
    43 000001AC 536A085756E838FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    43 000001B5 FF6683C410          <1>
    44                              <1>         
    45 000001BA 6A02E8F3FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02        ;//読み込みプレーン:赤(R)
    45 000001C3 C404                <1>
    46 000001C5 6A04E805FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04       ;//書き込みプレーン:赤(R)
    46 000001CE C404                <1>
    47 000001D0 536A045756E814FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    47 000001D9 FF6683C410          <1>
    48                              <1> 
    49 000001DE 6A01E8CFFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01        ;//読み込みプレーン:緑(G)
    49 000001E7 C404                <1>
    50 000001E9 6A02E8E1FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02       ;//書き込みプレーン:緑(G)
    50 000001F2 C404                <1>
    51 000001F4 536A025756E8F0FEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    51 000001FD FF6683C410          <1>
    52                              <1> 
    53 00000202 6A00E8ABFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00        ;//読み込みプレーン:青(B)
    53 0000020B C404                <1>
    54 0000020D 6A01E8BDFEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01       ;//書き込みプレーン:青(B)
    54 00000216 C404                <1>
    55 00000218 536A015756E8CCFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    55 00000221 FF6683C410          <1>
    56                              <1> 
    57                              <1>         ;---------------------------------------
    58                              <1>         ;レジスタの復帰
    59                              <1>         ;---------------------------------------
    60 00000226 5E                  <1>         pop     esi
    61 00000227 5F                  <1>         pop     edi
    62 00000228 5B                  <1>         pop     ebx
    63                              <1> 
    64                              <1>         ;---------------------------------------
    65                              <1>         ;スタックフレームの破棄
    66                              <1>         ;---------------------------------------
    67 00000229 89EC                <1>         mov     esp, ebp
    68 0000022B 5D                  <1>         pop     ebp
    69                              <1> 
    70 0000022C C3                  <1>         ret
    63                                  %include        "..\modules\protect\draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 0000022D 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 0000022E 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 00000230 50                  <1>         push    eax
    15 00000231 53                  <1>         push    ebx
    16 00000232 51                  <1>         push    ecx
    17 00000233 57                  <1>         push    edi
    18 00000234 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;コピー元フォントアドレスを設定
    22                              <1>         ;---------------------------------------
    23 00000235 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = X(列)
    24 00000238 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y(行)
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;コピー先アドレスを取得
    28                              <1>         ;---------------------------------------
    29 0000023B B900000000          <1>         mov     ecx, 0                          ;for(ECX = 0;
    30 00000240 81F900010000        <1> .10L:   cmp     ecx, 256                        ;    ECX < 256;
    31 00000246 731F                <1>         jae     .10E                            ;
    32                              <1>                                                 ;    ECX++)
    33                              <1>                                                 ;{
    34                              <1>         ;---------------------------------------
    35                              <1>         ;表示する桁位置を計算
    36                              <1>         ;---------------------------------------
    37 00000248 89C8                <1>         mov     eax, ecx                        ;   EAX = ECX;
    38 0000024A 83E00F              <1>         and     eax, 0x0F                       ;   EAX &= 0x0F;
    39 0000024D 01F0                <1>         add     eax, esi                        ;   EAX += X;
    40                              <1>         ;---------------------------------------
    41                              <1>         ;表示する行位置を計算
    42                              <1>         ;---------------------------------------
    43 0000024F 89CB                <1>         mov     ebx, ecx                        ;   EBX = ECX;
    44 00000251 C1EB04              <1>         shr     ebx, 4                          ;   EBX /= 16;
    45 00000254 01FB                <1>         add     ebx, edi                        ;   EBX += Y;
    46                              <1>         
    47 00000256 516A075350E80FFFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx  ;   draw_char();
    47 0000025F FF6683C410          <1>
    48                              <1> 
    49 00000264 41                  <1>         inc     ecx                             ;   //for(... ECX++)
    50 00000265 EBD9                <1>         jmp     .10L                            ;
    51                              <1> .10E:                                           ;}
    52                              <1> 
    53                              <1>         ;---------------------------------------
    54                              <1>         ;レジスタの復帰
    55                              <1>         ;---------------------------------------
    56 00000267 5E                  <1>         pop     esi
    57 00000268 5F                  <1>         pop     edi
    58 00000269 59                  <1>         pop     ecx
    59 0000026A 5B                  <1>         pop     ebx
    60 0000026B 58                  <1>         pop     eax
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ;スタックフレームの破棄
    64                              <1>         ;---------------------------------------
    65 0000026C 89EC                <1>         mov     esp, ebp
    66 0000026E 5D                  <1>         pop     ebp
    67                              <1> 
    68 0000026F C3                  <1>         ret
    64                                  %include        "..\modules\protect\draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 00000270 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 00000271 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 00000273 50                  <1>         push    eax
    15 00000274 53                  <1>         push    ebx
    16 00000275 51                  <1>         push    ecx
    17 00000276 52                  <1>         push    edx
    18 00000277 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;引数を変数に代入
    22                              <1>         ;---------------------------------------
    23 00000278 8B4D08              <1>         mov     ecx, [ebp + 8]                  ;ECX = 列;
    24 0000027B 8B550C              <1>         mov     edx, [ebp +12]                  ;EDX = 行;
    25 0000027E 0FB75D10            <1>         movzx   ebx, word [ebp + 16]            ;EBX = 表示色;
    26 00000282 8B7514              <1>         mov     esi, [ebp +20]                  ;ESI = 文字列へのアドレス;
    27                              <1> 
    28                              <1>         ;---------------------------------------
    29                              <1>         ;文字列を表示
    30                              <1>         ;---------------------------------------
    31 00000285 FC                  <1>         cld                                     ;DF = 0; //アドレス加算
    32                              <1> .10L:                                           ;do
    33                              <1>                                                 ;{
    34 00000286 AC                  <1>         lodsb                                   ;   AL = *ESI++;
    35 00000287 3C00                <1>         cmp     al, 0                           ;   if(0 == AL)
    36 00000289 7425                <1>         je  .10E                                ;       break;
    37                              <1> 
    38 0000028B 50535251E8DBFEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    38 00000294 6683C410            <1>
    39                              <1> 
    40                              <1>         ;---------------------------------------
    41                              <1>         ;文字の表示位置を更新
    42                              <1>         ;---------------------------------------
    43 00000298 41                  <1>         inc     ecx                             ;   ECX++; //列を加算
    44 00000299 83F950              <1>         cmp     ecx, 80                         ;   if(80 <= ECX) //80文字以上?
    45 0000029C 7C10                <1>         jl      .12E                            ;   {
    46 0000029E B900000000          <1>         mov     ecx, 0                          ;       ECX = 0; //列を初期化
    47 000002A3 42                  <1>         inc     edx                             ;       EDX++; //行を加算
    48 000002A4 83FA1E              <1>         cmp     edx, 30                         ;       if(30 <= EDX) //30行以上?
    49 000002A7 7C05                <1>         jl      .12E                            ;       {
    50 000002A9 BA00000000          <1>         mov     edx, 0                          ;           EDX = 0;
    51                              <1>                                                 ;       }
    52                              <1> .12E:                                           ;   }
    53 000002AE EBD6                <1>         jmp     .10L                            ;
    54                              <1> .10E:                                           ;}while(1);
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;レジスタの復帰
    58                              <1>         ;---------------------------------------
    59 000002B0 5E                  <1>         pop     esi
    60 000002B1 5A                  <1>         pop     edx
    61 000002B2 59                  <1>         pop     ecx
    62 000002B3 5B                  <1>         pop     ebx
    63 000002B4 58                  <1>         pop     eax
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;スタックフレームの破棄
    67                              <1>         ;---------------------------------------
    68 000002B5 89EC                <1>         mov     esp, ebp
    69 000002B7 5D                  <1>         pop     ebp
    70                              <1> 
    71 000002B8 C3                  <1>         ret
    65                                  %include        "..\modules\protect\draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 000002B9 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 000002BA 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 000002BC 50                  <1>         push    eax
    15 000002BD 53                  <1>         push    ebx
    16 000002BE 51                  <1>         push    ecx
    17 000002BF 52                  <1>         push    edx
    18 000002C0 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;引数を変数に代入
    22                              <1>         ;---------------------------------------
    23 000002C1 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = X(列)
    24 000002C4 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y(行)
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;カラーバーを表示
    28                              <1>         ;---------------------------------------
    29 000002C7 B900000000          <1>         mov     ecx, 0                          ;for(ECX = 0;
    30 000002CC 83F910              <1> .10L:   cmp     ecx, 16                         ;    ECX < 16;
    31 000002CF 732E                <1>         jae     .10E
    32                              <1>                                                 ;ECX++)
    33                              <1>                                                 ;{
    34                              <1>         ;---------------------------------------
    35                              <1>         ;表示位置を計算(列)
    36                              <1>         ;---------------------------------------
    37 000002D1 89C8                <1>         mov     eax, ecx                        ;   EAX = ECX;
    38 000002D3 83E001              <1>         and     eax, 0x01                       ;   EAX &= 0x01;
    39 000002D6 C1E003              <1>         shl     eax, 3                          ;   EAX *= 8; //8文字分乗算
    40 000002D9 01F0                <1>         add     eax, esi                        ;   EAX += X;
    41                              <1> 
    42                              <1>         ;---------------------------------------
    43                              <1>         ;表示位置を計算(行)
    44                              <1>         ;---------------------------------------
    45 000002DB 89CB                <1>         mov     ebx, ecx                        ;   EBX = ECX;
    46 000002DD D1EB                <1>         shr     ebx, 1                          ;   EBX /= 2;
    47 000002DF 01FB                <1>         add     ebx, edi                        ;   EBX += Y;
    48                              <1> 
    49                              <1>         ;---------------------------------------
    50                              <1>         ;描画色を計算
    51                              <1>         ;---------------------------------------
    52 000002E1 89CA                <1>         mov     edx, ecx                        ;   EDX = ECX;
    53 000002E3 D1E2                <1>         shl     edx, 1                          ;   EDX *= 2;
    54 000002E5 8B92[11030000]      <1>         mov     edx, [.t0 + edx]                ;   EDX += Y;
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;カラーバーを表示
    58                              <1>         ;---------------------------------------
    59 000002EB 68[08030000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0    ;   draw_str();
    59 000002F3 E878FFFFFF6683C410  <1>
    60                              <1> 
    61 000002FC 41                  <1>         inc     ecx                             ;   //for(...ECX++
    62 000002FD EBCD                <1>         jmp     .10L                            ;
    63                              <1> .10E:                                           ;}
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;レジスタの復帰
    67                              <1>         ;---------------------------------------
    68 000002FF 5E                  <1>         pop     esi
    69 00000300 5A                  <1>         pop     edx
    70 00000301 59                  <1>         pop     ecx
    71 00000302 5B                  <1>         pop     ebx
    72 00000303 58                  <1>         pop     eax
    73                              <1> 
    74                              <1>         ;---------------------------------------
    75                              <1>         ;スタックフレームの破棄
    76                              <1>         ;---------------------------------------
    77 00000304 89EC                <1>         mov     esp, ebp
    78 00000306 5D                  <1>         pop     ebp
    79                              <1> 
    80 00000307 C3                  <1>         ret
    81                              <1> 
    82                              <1>         ;---------------------------------------
    83                              <1>         ;データ
    84                              <1>         ;---------------------------------------
    85 00000308 202020202020202000  <1> .s0:    db  '        ', 0                       ;8文字分のスペース(表示色だけを変更)
    86                              <1> 
    87 00000311 00000008            <1> .t0:    dw  0x0000, 0x0800                      ;カラーバーの背景色
    88 00000315 00010009            <1>         dw  0x0100, 0x0900
    89 00000319 0002000A            <1>         dw  0x0200, 0x0A00
    90 0000031D 0003000B            <1>         dw  0x0300, 0x0B00
    91 00000321 0004000C            <1>         dw  0x0400, 0x0C00
    92 00000325 0005000D            <1>         dw  0x0500, 0x0D00
    93 00000329 0006000E            <1>         dw  0x0600, 0x0E00
    94 0000032D 0007000F            <1>         dw  0x0700, 0x0F00
    66                                  %include        "..\modules\protect\draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +16| 色
     6                              <1>                                             ;   +12| Y(行)
     7                              <1>                                             ;   + 8| X(列)
     8                              <1>                                             ;   + 4| IP(戻り番号)
     9 00000331 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    10 00000332 89E5                <1>         mov    ebp, esp                     ;------|---------
    11                              <1> 
    12                              <1>         ;-----------------------------------
    13                              <1>         ;レジスタの保存
    14                              <1>         ;-----------------------------------
    15 00000334 50                  <1>         push    eax
    16 00000335 53                  <1>         push    ebx
    17 00000336 51                  <1>         push    ecx
    18 00000337 57                  <1>         push    edi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;描画位置のメモリアドレスを計算
    22                              <1>         ;---------------------------------------
    23                              <1>         ;---------------------------------------
    24                              <1>         ;Y座標を80倍する(640/8)
    25                              <1>         ;---------------------------------------
    26 00000338 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y座標;
    27 0000033B C1E704              <1>         shl     edi, 4                          ;EDI *= 16;
    28 0000033E 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000] ;EDI = 0xA_0000[EDI * 4 + EDI];
    29                              <1>         
    30                              <1>         ;---------------------------------------
    31                              <1>         ;X座標を1/8して加算
    32                              <1>         ;---------------------------------------
    33 00000345 8B5D08              <1>         mov     ebx, [ebp + 8]                  ;EBX = X座標;
    34 00000348 89D9                <1>         mov     ecx, ebx                        ;ECX = X座標; //一時保存
    35 0000034A C1EB03              <1>         shr     ebx, 3                          ;EBX /= 8;
    36 0000034D 01DF                <1>         add     edi, ebx                        ;EDI += EBX;
    37                              <1> 
    38                              <1>         ;---------------------------------------
    39                              <1>         ;X座標を8で割った余りからビット位置を計算(出力ビットパターン)
    40                              <1>         ;(0=0x80, 1=0x40,... 7=0x01)
    41                              <1>         ;---------------------------------------
    42 0000034F 83E107              <1>         and     ecx, 0x07                       ;ECX = X & 0x07;
    43 00000352 BB80000000          <1>         mov     ebx, 0x80                       ;EBX = 0x80;
    44 00000357 D3EB                <1>         shr     ebx, cl                         ;EBX >>= ECX;
    45                              <1> 
    46                              <1>         ;---------------------------------------
    47                              <1>         ;色を指定
    48                              <1>         ;---------------------------------------
    49 00000359 8B4D10              <1>         mov     ecx, [ebp +16]                  ;表示色
    50                              <1> 
    51                              <1>         ;---------------------------------------
    52                              <1>         ;プレーンごとに出力
    53                              <1>         ;---------------------------------------
    54 0000035C 6A03E851FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03        ;輝度(I)プレーンを選択
    54 00000365 C404                <1>
    55 00000367 6A08E863FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08       ;輝度(I)プレーンを選択
    55 00000370 C404                <1>
    56 00000372 516A085753E8C5FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    56 0000037B FF6683C410          <1>
    57                              <1> 
    58 00000380 6A02E82DFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02        ;赤(R)プレーンを選択
    58 00000389 C404                <1>
    59 0000038B 6A04E83FFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04       ;赤(R)プレーンを選択
    59 00000394 C404                <1>
    60 00000396 516A045753E8A1FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    60 0000039F FF6683C410          <1>
    61                              <1> 
    62 000003A4 6A01E809FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01        ;緑(G)プレーンを選択
    62 000003AD C404                <1>
    63 000003AF 6A02E81BFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02       ;緑(G)プレーンを選択
    63 000003B8 C404                <1>
    64 000003BA 516A025753E87DFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    64 000003C3 FF6683C410          <1>
    65                              <1> 
    66 000003C8 6A00E8E5FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00        ;青(B)プレーンを選択
    66 000003D1 C404                <1>
    67 000003D3 6A01E8F7FCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01       ;青(B)プレーンを選択
    67 000003DC C404                <1>
    68 000003DE 516A015753E859FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    68 000003E7 FF6683C410          <1>
    69                              <1> 
    70                              <1>         ;---------------------------------------
    71                              <1>         ;レジスタの復帰
    72                              <1>         ;---------------------------------------
    73 000003EC 5F                  <1>         pop     edi
    74 000003ED 59                  <1>         pop     ecx
    75 000003EE 5B                  <1>         pop     ebx
    76 000003EF 58                  <1>         pop     eax
    77                              <1> 
    78                              <1>         ;---------------------------------------
    79                              <1>         ;スタックフレームの破棄
    80                              <1>         ;---------------------------------------
    81 000003F0 89EC                <1>         mov     esp, ebp
    82 000003F2 5D                  <1>         pop     ebp
    83                              <1> 
    84 000003F3 C3                  <1>         ret
    67                                  %include        "..\modules\protect\draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +24| 色
     6                              <1>                                             ;   +20| Y1(終点のY座標)
     7                              <1>                                             ;   +16| X1(終点のX座標)
     8                              <1>                                             ;   +12| Y0(始点のY座標)
     9                              <1>                                             ;   + 8| X0(始点のX座標)
    10                              <1>                                             ;   + 4| IP(戻り番号)
    11 000003F4 55                  <1>         push    ebp                         ;EBP+ 0| EBP(元の値)
    12 000003F5 89E5                <1>         mov     ebp, esp                    ;------|---------
    13                              <1> 
    14                              <1>         ;-----------------------------------
    15                              <1>         ;変数を定義
    16                              <1>         ;-----------------------------------
    17 000003F7 6A00                <1>         push    dword 0                     ;   - 4| sum = 0; //相対軸の積算値
    18 000003F9 6A00                <1>         push    dword 0                     ;   - 8| x0 = 0; //X座標
    19 000003FB 6A00                <1>         push    dword 0                     ;   -12| dx = 0; //X増分
    20 000003FD 6A00                <1>         push    dword 0                     ;   -16| inc_x = 0; //X座標増分(基準軸:1 or -1)
    21 000003FF 6A00                <1>         push    dword 0                     ;   -20| y0 = 0; //Y座標
    22 00000401 6A00                <1>         push    dword 0                     ;   -24| dy = 0; //Y増分
    23 00000403 6A00                <1>         push    dword 0                     ;   -28| inc_y = 0; //Y座標増分(基準軸:1 or -1)
    24                              <1> 
    25                              <1>         ;-----------------------------------
    26                              <1>         ;レジスタの保存
    27                              <1>         ;-----------------------------------
    28 00000405 50                  <1>         push    eax
    29 00000406 53                  <1>         push    ebx
    30 00000407 51                  <1>         push    ecx
    31 00000408 57                  <1>         push    edi
    32 00000409 52                  <1>         push    edx
    33 0000040A 56                  <1>         push    esi
    34                              <1> 
    35                              <1>         ;---------------------------------------
    36                              <1>         ;幅を計算(X軸)
    37                              <1>         ;---------------------------------------
    38 0000040B 8B4508              <1>         mov     eax, [ebp + 8]                  ;EAX = X0;
    39 0000040E 8B5D10              <1>         mov     ebx, [ebp +16]                  ;EBX = X1;
    40 00000411 29C3                <1>         sub     ebx, eax                        ;EBX = X1 - X0; //幅
    41 00000413 7D09                <1>         jge     .10F                            ;if(幅 < 0)
    42                              <1>                                                 ;{
    43 00000415 F7DB                <1>         neg     ebx                             ;   幅 *= -1;
    44 00000417 BEFFFFFFFF          <1>         mov     esi, -1                         ;   //X座標の増分
    45 0000041C EB05                <1>         jmp     .10E                            ;}
    46                              <1> .10F:                                           ;else
    47                              <1>                                                 ;{
    48 0000041E BE01000000          <1>         mov     esi, 1                          ;   //X座標の増分
    49                              <1> .10E:                                           ;}
    50                              <1> 
    51                              <1>         ;---------------------------------------
    52                              <1>         ;高さを計算(Y軸)
    53                              <1>         ;---------------------------------------
    54 00000423 8B4D0C              <1>         mov     ecx, [ebp +12]                  ;ECX = Y0;
    55 00000426 8B5514              <1>         mov     edx, [ebp +20]                  ;EDX = Y1;
    56 00000429 29CA                <1>         sub     edx, ecx                        ;EDX = Y1 - Y0; //高さ
    57 0000042B 7D09                <1>         jge     .20F                            ;if(高さ < 0)
    58                              <1>                                                 ;{
    59 0000042D F7DA                <1>         neg     edx                             ;   高さ *= -1;
    60 0000042F BFFFFFFFFF          <1>         mov     edi, -1                         ;   //Y座標の増分
    61 00000434 EB05                <1>         jmp     .20E                            ;}
    62                              <1> .20F:                                           ;else
    63                              <1>                                                 ;{
    64 00000436 BF01000000          <1>         mov     edi, 1                          ;   //Y座標の増分
    65                              <1> .20E:                                           ;}
    66                              <1>         
    67                              <1>         ;---------------------------------------
    68                              <1>         ;X軸
    69                              <1>         ;---------------------------------------
    70 0000043B 8945F8              <1>         mov     [ebp - 8], eax                  ;//X軸:開始座標
    71 0000043E 895DF4              <1>         mov     [ebp -12], ebx                  ;//X軸:描画幅
    72 00000441 8975F0              <1>         mov     [ebp -16], esi                  ;//X軸:増分(基準軸:1 or -1)
    73                              <1> 
    74                              <1>         ;---------------------------------------
    75                              <1>         ;Y軸
    76                              <1>         ;---------------------------------------
    77 00000444 894DEC              <1>         mov     [ebp -20], ecx                  ;//Y軸:開始座標
    78 00000447 8955E8              <1>         mov     [ebp -24], edx                  ;//Y軸:描画幅
    79 0000044A 897DE4              <1>         mov     [ebp -28], edi                  ;//Y軸:増分(基準軸:1 or -1)
    80                              <1> 
    81                              <1>         ;---------------------------------------
    82                              <1>         ;基準軸を決める
    83                              <1>         ;---------------------------------------
    84 0000044D 39D3                <1>         cmp     ebx, edx                        ;if(幅 <= 高さ)
    85 0000044F 7F08                <1>         jg      .22F                            ;{
    86                              <1>         
    87 00000451 8D75EC              <1>         lea     esi, [ebp -20]                  ;   //X軸が基準軸
    88 00000454 8D7DF8              <1>         lea     edi, [ebp - 8]                  ;   //Y軸が相対軸
    89                              <1> 
    90 00000457 EB06                <1>         jmp     .22E                            ;}
    91                              <1> .22F:                                           ;else
    92                              <1>                                                 ;{
    93 00000459 8D75F8              <1>         lea     esi, [ebp - 8]                  ;   //Y軸が基準軸
    94 0000045C 8D7DEC              <1>         lea     edi, [ebp -20]                  ;   //X軸が相対軸
    95                              <1> .22E:                                           ;}
    96                              <1> 
    97                              <1>         ;---------------------------------------
    98                              <1>         ;繰り返し回数(基準軸のドット数)(基準軸の長さが0な場合,繰り返し回数を1に設定し,1ピクセルの点を描画)
    99                              <1>         ;---------------------------------------
   100 0000045F 8B4EFC              <1>         mov     ecx, [esi - 4]                  ;ECX = 基準軸描画幅
   101 00000462 83F900              <1>         cmp     ecx, 0                          ;if(0 == ECX)
   102 00000465 7505                <1>         jnz     .30E                            ;{
   103 00000467 B901000000          <1>         mov     ecx, 1                          ;   ECX = 1;
   104                              <1> .30E:                                           ;}
   105                              <1> 
   106                              <1>         ;---------------------------------------
   107                              <1>         ;線を描画
   108                              <1>         ;---------------------------------------
   109                              <1> .50L:                                           ;do
   110                              <1>                                                 ;{
   113 0000046C FF7518FF75ECFF75F8- <1>         cdecl   draw_pixel, dword [ebp - 8],                             dword [ebp -20],                             dword [ebp +24]     ;   //点の描画
   113 00000475 E8B7FEFFFF6683C40C  <1>
   114                              <1> 
   115                              <1>         ;---------------------------------------
   116                              <1>         ;基準軸を更新
   117                              <1>         ;---------------------------------------
   118 0000047E 8B46F8              <1>         mov     eax, [esi - 8]                  ;   EAX = 基準軸増加(1 or -1);
   119 00000481 0106                <1>         add     [esi - 0], eax                  ;
   120                              <1> 
   121                              <1>         ;---------------------------------------
   122                              <1>         ;相対軸を更新
   123                              <1>         ;---------------------------------------
   124 00000483 8B45FC              <1>         mov     eax, [ebp - 4]                  ;   EAX = sum;  //相対軸の積算値
   125 00000486 0347FC              <1>         add     eax, [edi - 4]                  ;   EAX += dy;  //増加(相対軸の描画幅)
   126                              <1> 
   127 00000489 8B5EFC              <1>         mov     ebx, [esi - 4]                  ;   EBX = dx;   //増分(基準軸の描画幅)
   128                              <1> 
   129 0000048C 39D8                <1>         cmp     eax, ebx                        ;   if(積算値 <= 相対軸の増分)
   130 0000048E 7C07                <1>         jl      .52E                            ;   {
   131 00000490 29D8                <1>         sub     eax, ebx                        ;       EAX -= EBX; //積算値から相対軸の増分を減算
   132                              <1>                                                 ;       //相対軸の座標を更新(1ドット分)
   133 00000492 8B5FF8              <1>         mov     ebx, [edi - 8]                  ;       EBX = 相対軸増分;
   134 00000495 011F                <1>         add     [edi - 0], ebx                  ;       相対軸座標 = EBX;
   135                              <1> .52E:                                           ;   }
   136                              <1> 
   137 00000497 8945FC              <1>         mov     [ebp - 4], eax                  ;//積算値を更新
   138                              <1> 
   139 0000049A E2D0                <1>         loop    .50L
   140                              <1> .50E:                                           ;} while(ループ回数--);
   141                              <1> 
   142                              <1>         ;---------------------------------------
   143                              <1>         ;レジスタの復帰
   144                              <1>         ;---------------------------------------
   145 0000049C 5E                  <1>         pop     esi
   146 0000049D 5A                  <1>         pop     edx
   147 0000049E 5F                  <1>         pop     edi
   148 0000049F 59                  <1>         pop     ecx
   149 000004A0 5B                  <1>         pop     ebx
   150 000004A1 58                  <1>         pop     eax
   151                              <1> 
   152                              <1>         ;---------------------------------------
   153                              <1>         ;スタックフレームの破棄
   154                              <1>         ;---------------------------------------
   155 000004A2 89EC                <1>         mov     esp, ebp
   156 000004A4 5D                  <1>         pop     ebp
   157                              <1> 
   158 000004A5 C3                  <1>         ret
    68                                  %include        "..\modules\protect\draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +24| 色
     6                              <1>                                             ;   +20| Y1(終点のY座標)
     7                              <1>                                             ;   +16| X1(終点のX座標)
     8                              <1>                                             ;   +12| Y0(始点のY座標)
     9                              <1>                                             ;   + 8| X0(始点のX座標)
    10                              <1>                                             ;   + 4| IP(戻り番号)
    11 000004A6 55                  <1>         push    ebp                         ;EBP+ 0| EBP(元の値)
    12 000004A7 89E5                <1>         mov     ebp, esp                    ;------|---------
    13                              <1>         ;-----------------------------------
    14                              <1>         ;レジスタの保存
    15                              <1>         ;-----------------------------------
    16 000004A9 50                  <1>         push    eax
    17 000004AA 53                  <1>         push    ebx
    18 000004AB 51                  <1>         push    ecx
    19 000004AC 52                  <1>         push    edx
    20 000004AD 56                  <1>         push    esi
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;変数に引数を代入
    24                              <1>         ;---------------------------------------
    25 000004AE 8B4508              <1>         mov     eax, [ebp + 8]                  ;EAX = X0;
    26 000004B1 8B5D0C              <1>         mov     ebx, [ebp +12]                  ;EBX = Y0;
    27 000004B4 8B4D10              <1>         mov     ecx, [ebp +16]                  ;ECX = X1;
    28 000004B7 8B5514              <1>         mov     edx, [ebp +20]                  ;EDX = Y1;
    29 000004BA 8B7518              <1>         mov     esi, [ebp +24]                  ;ESI = 色;
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ;座標軸の大小を確定
    33                              <1>         ;---------------------------------------
    34 000004BD 39C8                <1>         cmp     eax, ecx                        ;if(X1 < X0)
    35 000004BF 7C01                <1>         jl      .10E                            ;{
    36 000004C1 91                  <1>         xchg    eax, ecx                        ;   //X0とX1を入れ替える;
    37                              <1> .10E:                                           ;}
    38                              <1> 
    39 000004C2 39D3                <1>         cmp     ebx, edx                        ;if(Y1 < Y0)
    40 000004C4 7C02                <1>         jl      .20E                            ;{
    41 000004C6 87DA                <1>         xchg    ebx, edx                        ;   //Y0とY1を入れ替える;
    42                              <1> .20E:                                           ;}
    43                              <1> 
    44                              <1>         ;---------------------------------------
    45                              <1>         ;矩形を描画
    46                              <1>         ;---------------------------------------
    47 000004C8 5653515350E822FFFF- <1>         cdecl   draw_line, eax, ebx, ecx, ebx, esi  ;上線
    47 000004D1 FF6683C414          <1>
    48 000004D6 5652505350E814FFFF- <1>         cdecl   draw_line, eax, ebx, eax, edx, esi  ;左線
    48 000004DF FF6683C414          <1>
    49                              <1> 
    50 000004E4 4A                  <1>         dec     edx                                 ;EDX--; //下線は1ドット上げる
    51 000004E5 5652515250E805FFFF- <1>         cdecl   draw_line, eax, edx, ecx, edx, esi  ;下線
    51 000004EE FF6683C414          <1>
    52 000004F3 42                  <1>         inc     edx
    53                              <1> 
    54 000004F4 49                  <1>         dec     ecx                                 ;ECX--; //右線は1ドット左に移動
    55 000004F5 5652515351E8F5FEFF- <1>         cdecl   draw_line, ecx, ebx, ecx, edx, esi  ;右線
    55 000004FE FF6683C414          <1>
    56                              <1> 
    57                              <1>         ;---------------------------------------
    58                              <1>         ;レジスタの復帰
    59                              <1>         ;---------------------------------------
    60 00000503 5E                  <1>         pop     esi
    61 00000504 5A                  <1>         pop     edx
    62 00000505 59                  <1>         pop     ecx
    63 00000506 5B                  <1>         pop     ebx
    64 00000507 58                  <1>         pop     eax
    65                              <1> 
    66                              <1>         ;---------------------------------------
    67                              <1>         ;スタックフレームの破棄
    68                              <1>         ;---------------------------------------
    69 00000508 89EC                <1>         mov     esp, ebp
    70 0000050A 5D                  <1>         pop     ebp
    71                              <1> 
    72 0000050B C3                  <1>         ret
    69                                  
    70                                  ;********************************************************************************************************
    71                                  ;パディング
    72                                  ;********************************************************************************************************
    73 0000050C 00<rept>                        times KERNEL_SIZE - ($ - $$)    db 0    ;パディング
