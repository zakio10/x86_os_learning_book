     1                                          BOOT_LOAD       equ     0x7C00                  ;ブートプログラムのロード位置
     2                                  
     3                                          ORG             BOOT_LOAD                       ;ブートアドレスをアセンブラに指示
     4                                  
     5                                  ;********************************************************************************************************
     6                                  ;マクロ
     7                                  ;********************************************************************************************************
     8                                  %include        "..\include\macro.s"
     1                              <1> %macro  cdecl   1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     9                                  
    10                                  ;********************************************************************************************************
    11                                  ;エントリポイント
    12                                  ;********************************************************************************************************
    13                                  entry:
    14                                          ;---------------------------------------
    15                                          ;BPB(BIOS Parameter Block)
    16                                          ;---------------------------------------
    17 00000000 EB58                            jmp ipl                                    ;IPL(Initial Program Loader)(ブートプログラム)へジャンプ
    18 00000002 90<rept>                        times   90 - ($ - $$) db 0x90
    19                                  
    20                                          ;---------------------------------------
    21                                          ;IPL(Initial Program Loader)
    22                                          ;---------------------------------------
    23                                  ipl:
    24 0000005A FA                              cli                                     ;//割り込み禁止(IF = 1)
    25                                  
    26 0000005B B80000                          mov     ax, 0x0000                      ;AX = 0x0000;
    27 0000005E 8ED8                            mov     ds, ax                          ;DS = 0x0000;
    28 00000060 8EC0                            mov     es, ax                          ;ES = 0x0000;
    29 00000062 8ED0                            mov     ss, ax                          ;SS = 0x0000;
    30 00000064 BC007C                          mov     sp, BOOT_LOAD                   ;SP = 0x0000;
    31                                  
    32 00000067 FB                              sti                                     ;//割り込み許可(IF = 0)
    33                                  
    34 00000068 8816[9200]                      mov     [BOOT.DRIVE], dl                ;ブートドライブを保存
    35                                  
    36                                          ;---------------------------------------
    37                                          ;文字を表示
    38                                          ;---------------------------------------
    39 0000006C 68[7A00]E8220083C4-             cdecl   puts, .s0                       ;puts(.s0);
    39 00000074 02                 
    40                                  
    41 00000075 E8BB00                          cdecl   reboot                          ;//戻ってこない
    42                                          ;---------------------------------------
    43                                          ;文字を表示
    44                                          ;---------------------------------------
    45                                          ; cdecl   itoa, 8086, .s1, 8, 10, 0b0001  ;"    8086"
    46                                          ; cdecl   puts, .s1
    47                                  
    48                                          ; cdecl   itoa, 8086, .s1, 8, 10, 0b0011  ;"+   8086"
    49                                          ; cdecl   puts, .s1
    50                                  
    51                                          ; cdecl   itoa,-8086, .s1, 8, 10, 0b0001  ;"-   8086"
    52                                          ; cdecl   puts, .s1
    53                                  
    54                                          ; cdecl   itoa, -1, .s1, 8, 10, 0b0001    ;"-      1"
    55                                          ; cdecl   puts, .s1
    56                                  
    57                                          ; cdecl   itoa, -1, .s1, 8, 10, 0b0000    ;"   65535"
    58                                          ; cdecl   puts, .s1
    59                                  
    60                                          ; cdecl   itoa, -1, .s1, 8, 16, 0b0000    ;"    FFFF"
    61                                          ; cdecl   puts, .s1
    62                                  
    63                                          ; cdecl   itoa, 12, .s1, 8, 2, 0b0100     ;"00001100"
    64                                          ; cdecl   puts, .s1
    65                                  
    66                                          ;---------------------------------------
    67                                          ;処理の終了
    68                                          ;---------------------------------------
    69 00000078 EBFE                            jmp     $                               ;while(1); //無限ループ
    70                                  
    71                                          ;---------------------------------------
    72                                          ;データ
    73                                          ;---------------------------------------
    74 0000007A 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    74 00000083 2E0A0D00           
    75 00000087 2D2D2D2D2D2D2D2D0A-     .s1     db      "--------", 0x0A, 0x0D, 0
    75 00000090 0D00               
    76                                  
    77                                  ALIGN   2, db 0
    78                                  BOOT:                                           ;ブートドライブに関する情報
    79 00000092 0000                    .DRIVE:    dw 0                                 ;ドライブ番号
    80                                  
    81                                  ;********************************************************************************************************
    82                                  ;モジュール
    83                                  ;********************************************************************************************************
    84                                  %include        "..\modules\real\puts.s"
     1                              <1> puts:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  + 4| 文字列へのアドレス
     6                              <1>                                             ;  + 2| IP(戻り番号)
     7 00000094 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
     8 00000095 89E5                <1>         mov     bp, sp                      ;-----|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 00000097 50                  <1>         push    ax
    14 00000098 53                  <1>         push    bx
    15 00000099 56                  <1>         push    si
    16                              <1> 
    17                              <1>         ;---------------------------------------
    18                              <1>         ;引数の取得
    19                              <1>         ;---------------------------------------
    20 0000009A 8B7604              <1>         mov     si, [bp + 4]                    ;SI = 文字列へのアドレス
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;処理の開始
    24                              <1>         ;---------------------------------------
    25 0000009D B40E                <1>         mov     ah, 0x0E                        ;テレタイプ式1文字出力を指定
    26 0000009F BB0000              <1>         mov     bx, 0x0000                      ;ページ番号と文字色を0に設定
    27 000000A2 FC                  <1>         cld                                     ;DF = 0; //アドレス加算
    28                              <1> .10L:                                           ;do
    29                              <1>                                                 ;{
    30 000000A3 AC                  <1>         lodsb                                   ;       AL = *SI++;
    31                              <1> 
    32 000000A4 3C00                <1>         cmp     al, 0                           ;       if(0 == AL)
    33 000000A6 7404                <1>         je      .10E                            ;               break;
    34                              <1> 
    35 000000A8 CD10                <1>         int     0x10                            ;       Int10(0x0E,AL); //文字出力
    36 000000AA EBF7                <1>         jmp     .10L                            ;
    37                              <1> .10E:                                           ;}while(1);
    38                              <1> 
    39                              <1>         ;---------------------------------------
    40                              <1>         ;レジスタの復帰
    41                              <1>         ;---------------------------------------
    42 000000AC 5E                  <1>         pop     si
    43 000000AD 5B                  <1>         pop     bx
    44 000000AE 58                  <1>         pop     ax
    45                              <1> 
    46                              <1>         ;---------------------------------------
    47                              <1>         ;スタックフレームの破棄
    48                              <1>         ;---------------------------------------
    49 000000AF 89EC                <1>         mov     sp, bp
    50 000000B1 5D                  <1>         pop     bp
    51                              <1> 
    52 000000B2 C3                  <1>         ret
    85                                  %include        "..\modules\real\itoa.s"
     1                              <1> itoa:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  +12| フラグ
     6                              <1>                                             ;  +10| 基数
     7                              <1>                                             ;  + 8| バッファサイズ
     8                              <1>                                             ;  + 6| バッファアドレス
     9                              <1>                                             ;  + 4| 数値
    10                              <1>                                             ;  + 2| IP(戻り番号)
    11 000000B3 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
    12 000000B4 89E5                <1>         mov     bp, sp                      ;-----|---------
    13                              <1> 
    14                              <1>         ;-----------------------------------
    15                              <1>         ;レジスタの保存
    16                              <1>         ;-----------------------------------
    17 000000B6 50                  <1>         push    ax
    18 000000B7 53                  <1>         push    bx
    19 000000B8 51                  <1>         push    cx
    20 000000B9 52                  <1>         push    dx
    21 000000BA 56                  <1>         push    si
    22 000000BB 57                  <1>         push    di
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ;引数の取得
    26                              <1>         ;---------------------------------------
    27 000000BC 8B4604              <1>         mov     ax, [bp + 4]                    ;ax(val) =  数値;
    28 000000BF 8B7606              <1>         mov     si, [bp + 6]                    ;si(dst) = バッファアドレス;
    29 000000C2 8B4E08              <1>         mov     cx, [bp + 8]                    ;cx(size) = バッファサイズ;
    30                              <1> 
    31 000000C5 89F7                <1>         mov     di, si                          ; di = si(dst); //バッファの最後尾
    32 000000C7 01CF                <1>         add     di, cx                          ;di(dst) = di + cx - 1;
    33 000000C9 4F                  <1>         dec     di
    34                              <1> 
    35 000000CA 8B5E0C              <1>         mov     bx, word [bp + 12]              ;flags = オプション;
    36                              <1> 
    37                              <1>         ;---------------------------------------
    38                              <1>         ;符号付き判定
    39                              <1>         ;---------------------------------------
    40 000000CD F7C30100            <1>         test    bx, 0b0001                       ;if(flags & 0x01) //符号付き
    41 000000D1 7408                <1> .10Q:   je      .10E                            ;{
    42 000000D3 83F800              <1>         cmp     ax, 0                           ;   if(val < 0)
    43 000000D6 7D03                <1> .12Q:   jge     .12E                            ;   {
    44 000000D8 83CB02              <1>         or      bx, 0b0010                      ;       flags |= 2; //符号表示
    45                              <1> .12E:                                           ;   }
    46                              <1> .10E:                                           ;}
    47                              <1> 
    48                              <1>         ;---------------------------------------
    49                              <1>         ;符号付き判定
    50                              <1>         ;---------------------------------------
    51 000000DB F7C30200            <1>         test    bx, 0b0010                      ;if(flags & 0x02) //符号出力判定
    52 000000DF 7410                <1> .20Q:   je      .20E                            ;{
    53 000000E1 83F800              <1>         cmp     ax, 0                           ;   if(val < 0)
    54 000000E4 7D07                <1> .22Q:   jge     .22F                            ;   {
    55 000000E6 F7D8                <1>         neg     ax                              ;       val *= -1; //符号反転
    56 000000E8 C6042D              <1>         mov     [si], byte '-'                  ;       *dst = '-'; //符号表示
    57 000000EB EB03                <1>         jmp     .22E                            ;   }
    58                              <1> .22F:                                           ;   else
    59                              <1>                                                 ;   {
    60 000000ED C6042B              <1>         mov     [si], byte '+'                  ;       *dst = '+'; //符号表示
    61                              <1> .22E:                                           ;   }
    62 000000F0 49                  <1>         dec     cx                              ;   size--;     //残りバッファサイズの減算
    63                              <1> .20E:                                           ;}
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;ASCII変換
    67                              <1>         ;---------------------------------------
    68 000000F1 8B5E0A              <1>         mov     bx, [bp + 10]                   ;BX = 基数;
    69                              <1> .30L:                                           ;do
    70                              <1>                                                 ;{
    71 000000F4 BA0000              <1>         mov     dx, 0                           ;
    72 000000F7 F7F3                <1>         div     bx                              ;   DX = DX:AX % 基数;
    73                              <1>                                                 ;   AX = DX:AX / 基数;
    74                              <1>                                                 ;
    75 000000F9 89D6                <1>         mov     si, dx                          ;   //テーブル参照
    76 000000FB 8A94[2301]          <1>         mov     dl, byte [.ascii + si]          ;   DL = ASCII[DX]
    77                              <1>                                                 ;
    78 000000FF 8815                <1>         mov     [di], dl                        ;   *dst = DL;
    79 00000101 4F                  <1>         dec     di                              ;   dst--;
    80                              <1>                                                 ;
    81 00000102 83F800              <1>         cmp     ax, 0                           ;
    82 00000105 E0ED                <1>         loopnz  .30L                            ;}while(AX);
    83                              <1> .30E:
    84                              <1> 
    85                              <1>         ;---------------------------------------
    86                              <1>         ;空欄を埋める
    87                              <1>         ;---------------------------------------
    88 00000107 83F900              <1>         cmp     cx, 0                           ;if(size)
    89 0000010A 740D                <1> .40Q:   je      .40E                            ;{
    90 0000010C B020                <1>         mov     al, ' '                         ;       AL = ' '; // ' 'で埋める(デフォルト値)
    91 0000010E 837E0C04            <1>         cmp     [bp + 12], word 0b0100          ;       if(flags & 0x04)
    92 00000112 7502                <1> .42Q:   jne     .42E                            ;           {
    93 00000114 B030                <1>         mov     al, '0'                         ;               AL = '0'; // '0'で埋める
    94                              <1> .42E:                                           ;           }
    95 00000116 FD                  <1>         std                                     ;       // DF = 1(-方向)
    96 00000117 F3AA                <1>         rep     stosb                           ;       while(--CX) *DI -- = AL;
    97                              <1> .40E:                                           ;}
    98                              <1>         
    99                              <1>         ;---------------------------------------
   100                              <1>         ;レジスタの復帰
   101                              <1>         ;---------------------------------------
   102 00000119 5F                  <1>         pop     di
   103 0000011A 5E                  <1>         pop     si
   104 0000011B 5A                  <1>         pop     dx
   105 0000011C 59                  <1>         pop     cx
   106 0000011D 5B                  <1>         pop     bx
   107 0000011E 58                  <1>         pop     ax
   108                              <1> 
   109                              <1>         ;---------------------------------------
   110                              <1>         ;スタックフレームの破棄
   111                              <1>         ;---------------------------------------
   112 0000011F 89EC                <1>         mov     sp, bp
   113 00000121 5D                  <1>         pop     bp
   114                              <1> 
   115 00000122 C3                  <1>         ret
   116                              <1> 
   117 00000123 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"              ;変換テーブル
   117 0000012C 39414243444546      <1>
    86                                  %include        "..\modules\real\reboot.s"
     1                              <1> reboot:
     2                              <1>         ;-------------------------------------------
     3                              <1>         ;メッセージを表示                           
     4                              <1>         ;-------------------------------------------
     5 00000133 68[4F01]E85BFF83C4- <1>         cdecl   puts, .s0                           ;//再起動メッセージを表示
     5 0000013B 02                  <1>
     6                              <1> 
     7                              <1>         ;-------------------------------------------
     8                              <1>         ;キー入力待ち
     9                              <1>         ;-------------------------------------------
    10                              <1> .10L:                                               ;do
    11                              <1>                                                     ;{
    12 0000013C B410                <1>         mov     ah, 0x10                            ;   //キー入力待ち
    13 0000013E CD16                <1>         int     0x16                                ;   AL = BIOS(0x16, 0x10);
    14                              <1>                                                     ;
    15 00000140 3C20                <1>         cmp     al, ' '                             ;   ZF = (AL == ' ');
    16 00000142 75F8                <1>         jne     .10L                                ;}while(!ZF);
    17                              <1> 
    18                              <1>         ;-------------------------------------------
    19                              <1>         ;改行を出力
    20                              <1>         ;-------------------------------------------
    21 00000144 68[6D01]E84AFF83C4- <1>         cdecl   puts, .s1                           ;改行
    21 0000014C 02                  <1>
    22                              <1> 
    23                              <1>         ;-------------------------------------------
    24                              <1>         ;再起動
    25                              <1>         ;-------------------------------------------
    26 0000014D CD19                <1>         int     0x19                                ;BIOS(0x19);    //reboot();
    27                              <1> 
    28                              <1>         ;-------------------------------------------
    29                              <1>         ;文字列データ
    30                              <1>         ;-------------------------------------------
    31 0000014F 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    31 00000158 414345206B65792074- <1>
    31 00000161 6F207265626F6F742E- <1>
    31 0000016A 2E2E00              <1>
    32 0000016D 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    87                                  
    88                                  ;********************************************************************************************************
    89                                  ;ブートフラグ(先頭512バイトの終了)
    90                                  ;********************************************************************************************************
    91 00000172 00<rept>                        times   510 - ($ - $$) db 0x00
    92 000001FE 55AA                            db 0x55, 0xAA
