draw_char:
        ;-----------------------------------
        ;スタックフレームの構築
        ;-----------------------------------
                                            ;   +20| 文字
                                            ;   +16| 描画色
                                            ;   +12| 行(0~29)
                                            ;   + 8| 列(0~79)
                                            ;   + 4| IP(戻り番号)
        push   ebp                          ;EBP+ 0| EBP(元の値)
        mov    ebp, esp                     ;------|---------

        ;-----------------------------------
        ;レジスタの保存
        ;-----------------------------------
        push    ebx
        push    edi
        push    esi

        ;---------------------------------------
        ;コピー元フォントアドレスを設定
        ;---------------------------------------
        movzx   esi, byte [ebp +20]             ;CL = 文字コード;
        shl     esi, 4                          ;CL *= 16; //1文字16バイト
        add     esi, [FONT_ADR]                 ;ESI = フォントアドレス;

        ;---------------------------------------
        ;コピー先アドレスを取得
        ;adr = 0xA0000 + (640 / 8 * 16) * y + x
        ;---------------------------------------
        mov     edi, [ebp +12]                  ;Y(行)
        shl     edi, 8                          ;EDI = Y * 256;
        lea     edi, [edi * 4 + edi + 0xA0000]  ;EDI = Y * 4 + Y;
        add     edi, [ebp + 8]                  ;X(列)

        ;---------------------------------------
        ;同期処理(リソース解法待ち(ビジーウェイト))
        ;---------------------------------------
%ifdef  USE_TEST_AND_SET
        cdecl   test_and_set, IN_USE            ;//リソースの空き待ち
%endif

        ;---------------------------------------
        ;1文字文のフォントを出力
        ;---------------------------------------
        movzx   ebx, word [ebp +16]             ; //表示色

        cdecl   vga_set_read_plane, 0x03        ;//読み込みプレーン:輝度(I)
        cdecl   vga_set_write_plane, 0x08       ;//書き込みプレーン:輝度(I)
        cdecl   vram_font_copy, esi, edi, 0x08, ebx
        
        cdecl   vga_set_read_plane, 0x02        ;//読み込みプレーン:赤(R)
        cdecl   vga_set_write_plane, 0x04       ;//書き込みプレーン:赤(R)
        cdecl   vram_font_copy, esi, edi, 0x04, ebx

        cdecl   vga_set_read_plane, 0x01        ;//読み込みプレーン:緑(G)
        cdecl   vga_set_write_plane, 0x02       ;//書き込みプレーン:緑(G)
        cdecl   vram_font_copy, esi, edi, 0x02, ebx

        cdecl   vga_set_read_plane, 0x00        ;//読み込みプレーン:青(B)
        cdecl   vga_set_write_plane, 0x01       ;//書き込みプレーン:青(B)
        cdecl   vram_font_copy, esi, edi, 0x01, ebx

        ;---------------------------------------
        ;同期処理(リソース解法)
        ;---------------------------------------
%ifdef  USE_TEST_AND_SET
        mov     [IN_USE], dword 0               ;変数のクリア
%endif

        ;---------------------------------------
        ;レジスタの復帰
        ;---------------------------------------
        pop     esi
        pop     edi
        pop     ebx

        ;---------------------------------------
        ;スタックフレームの破棄
        ;---------------------------------------
        mov     esp, ebp
        pop     ebp

        ret

        ;---------------------------------------
        ;データ
        ;---------------------------------------
ALIGN   4,      db      0
IN_USE:         dd      0