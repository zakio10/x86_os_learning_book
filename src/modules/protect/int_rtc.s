int_rtc:
        ;---------------------------------------
        ;レジスタの保存
        ;---------------------------------------
        pusha
        push    ds
        push    es

        ;---------------------------------------
        ;データ用セグメントセレクタの設定
        ;---------------------------------------
        mov     ax, 0x0010
        mov     ds, ax
        mov     es, ax

        ;---------------------------------------
        ;RTCから時刻を取得
        ;---------------------------------------
        cdecl   rtc_get_time, RTC_TIME          ;EAX = get_time(&RTC_TIME);

        ;---------------------------------------
        ;RTCの割り込み要因を取得
        ;---------------------------------------
        outp    0x70, 0x0C                      ;outp(0x70, 0x0C); //レジスタCを選択
        in      al, 0x71                        ;AL = port(0x71);

        ;---------------------------------------
        ;割り込みフラグをクリア(EOI)
        ;---------------------------------------
        mov     al, 0x20                        ;AL = EOIコマンド;
        out     0xA0, al                        ;outp(0xA0, AL); //スレーブPIC
        out     0x20, al                        ;outp(0x20, AL); //マスタPIC

        ;---------------------------------------
        ;レジスタの復帰
        ;---------------------------------------
        pop     es
        pop     ds
        popa

        iret                                    ;割り込み処理の終了

rtc_int_en:
        ;-----------------------------------
        ;スタックフレームの構築
        ;-----------------------------------
                                            ;   + 8| 指定されたビット
                                            ;   + 4| IP(戻り番号)
        push    ebp                         ;EBP+ 0|EBP(元の値)
        mov     ebp, esp                    ;------|---------

        ;---------------------------------------
        ;レジスタの保存
        ;---------------------------------------
        push    eax

        ;---------------------------------------
        ;割り込み許可認定(RTCの内部レジスタBのUIE(更新終了割り込み許可)ビットをセット)
        ;---------------------------------------
        outp    0x70, 0x0B                      ;outp(0x70, AL); //レジスタBを選択

        in      al, 0x71                        ;AL = port(0x71); //レジスタBの
        or      al, [ebp + 8]                   ;AL |= ビット; //指定されたビットをセット

        out     0x71, al                        ;outp(0x71, AL); //レジスタBに書き込み

        ;---------------------------------------
        ;レジスタの復帰
        ;---------------------------------------
        pop     eax

        ;---------------------------------------
        ;スタックフレームの破棄
        ;---------------------------------------
        mov     esp, ebp
        pop     ebp

        ret