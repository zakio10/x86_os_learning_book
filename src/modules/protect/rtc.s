;************************************************************************
;	RTCから時刻データを取得する
;========================================================================
;■書式		: DWORD rtc_get_time(dst);
;
;■引数
;	dst		: 保存先アドレス
;
;■戻り値	: 成功(0以外)、失敗(0)
;************************************************************************
rtc_get_time:
		;---------------------------------------
		; 【スタックフレームの構築】
		;---------------------------------------
												; ------|--------
												; EBP+ 8| 保存先アドレス
												; ---------------
		push	ebp								; EBP+ 4| EIP（戻り番地）
		mov		ebp, esp						; EBP+ 0| EBP（元の値）
												; ---------------
		;---------------------------------------
		; 【レジスタの保存】
		;---------------------------------------
		push	ebx

		;---------------------------------------
		; RTCから時刻を取得
		;---------------------------------------
		mov		al, 0x0A						; // レジスタA
		out		0x70, al						; outp(0x70, AL);
		in		al, 0x71						; AL = レジスタA;
		test	al, 0x80						; if (DM & UIP) // 更新中
		je		.10F							; {
		mov		eax, 1							;   ret = 1; // データ更新中
		jmp		.10E							; }
.10F:											; else
												; {
												;   // RAM[0x04]:時
		mov		al, 0x04						;   AL = 0x04;
		out		0x70, al						;   outp(0x70, AL);
		in		al, 0x71						;   AL = inp(0x71); // 時データ
												;   
		shl		eax, 8							;   EAX <<= 8;      // データを退避
												;   
												;   // RAM[0x02]:分
		mov		al, 0x02						;   AL = 0x02;
		out		0x70, al						;   outp(0x70, AL);
		in		al, 0x71						;   AL = inp(0x71); // 分データ
												;   
		shl		eax, 8							;   EAX <<= 8;      // データを退避
												;   
												;   // RAM[0x00]:秒
		mov		al, 0x00						;   AL = 0x00;
		out		0x70, al						;   outp(0x70, AL);
		in		al, 0x71						;   AL = inp(0x71); // 秒データ
												;   
		and		eax, 0x00_FF_FF_FF				;   // 下位3バイトのみ有効
												;   
		mov		ebx, [ebp + 8]					;   dst = 保存先;
		mov		[ebx], eax						;   [dst] = 時刻;
												;   
		mov		eax, 0							;   ret = 0; // 正常終了
.10E:											; }

		;---------------------------------------
		; 【レジスタの復帰】
		;---------------------------------------
		pop		ebx

		;---------------------------------------
		; 【スタックフレームの破棄】
		;---------------------------------------
		mov		esp, ebp
		pop		ebp

		ret

