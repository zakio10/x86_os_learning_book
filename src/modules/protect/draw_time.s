draw_time:
        ;-----------------------------------
        ;スタックフレームの構築
        ;-----------------------------------
                                            ;   +24| フラグ
                                            ;   +20| 基数
                                            ;   +16| バッファサイズ
                                            ;   +12| バッファアドレス
                                            ;   + 8| 数値
                                            ;   + 4| IP(戻り番号)
        push    ebp                         ;EBP+ 0|EBP(元の値)
        mov     ebp, esp                    ;------|---------

        ;-----------------------------------
        ;レジスタの保存
        ;-----------------------------------
        push    eax
        push    ebx

        ;---------------------------------------
        ;数字を文字に変換
        ;---------------------------------------
        mov     eax, [ebp +20]                  ;EAX = 時刻データ;

        movzx   ebx, al                         ;EBX = 秒;
        cdecl   itoa, ebx, .sec, 2, 16, 0b0100  ;//文字を変換

        mov     bl, ah                          ;EBX = 分;
        cdecl   itoa, ebx, .min, 2, 16, 0b0100  ;//文字に変換

        shr     eax, 16                         ;EBX = 時;
        cdecl   itoa, eax, .hour, 2, 16, 0b0100 ;//文字に変換

        ;---------------------------------------
        ;文字列を表示
        ;---------------------------------------
        cdecl   draw_str, dword [ebp + 8], dword [ebp +12], dword [ebp +16], .hour
        
        ;---------------------------------------
        ;レジスタの復帰
        ;---------------------------------------
        pop     ebx
        pop     eax

        ;---------------------------------------
        ;スタックフレームの破棄
        ;---------------------------------------
        mov     esp, ebp
        pop     ebp

        ret

        ;---------------------------------------
        ;データ
        ;---------------------------------------
        .hour:  db  "ZZ:"
        .min:   db  "ZZ:"
        .sec:   db  "ZZ", 0