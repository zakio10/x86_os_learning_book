     1                                          BOOT_LOAD       equ     0x7C00                  ;ブートプログラムのロード位置
     2                                  
     3                                          ORG             BOOT_LOAD                       ;ブートアドレスをアセンブラに指示
     4                                  
     5                                  ;********************************************************************************************************
     6                                  ;マクロ
     7                                  ;********************************************************************************************************
     8                                  %include        "..\include\macro.s"
     1                              <1> %macro  cdecl   1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     9                                  
    10                                  ;********************************************************************************************************
    11                                  ;エントリポイント
    12                                  ;********************************************************************************************************
    13                                  
    14                                  
    15                                  entry:
    16 00000000 EB58                            jmp ipl                                    ;IPL(Initial Program Loader)(ブートプログラム)へジャンプ
    17                                  
    18                                          ;---------------------------------------
    19                                          ;BPB(BIOS Parameter Block)
    20                                          ;---------------------------------------
    21 00000002 90<rept>                        times   90 - ($ - $$) db 0x90
    22                                  
    23                                          ;---------------------------------------
    24                                          ;IPL(Initial Program Loader)
    25                                          ;---------------------------------------
    26                                  ipl:
    27 0000005A FA                              cli                                     ;//割り込み禁止(IF = 1)
    28                                  
    29 0000005B B80000                          mov     ax, 0x0000                      ;AX = 0x0000;
    30 0000005E 8ED8                            mov     ds, ax                          ;DS = 0x0000;
    31 00000060 8EC0                            mov     es, ax                          ;ES = 0x0000;
    32 00000062 8ED0                            mov     ss, ax                          ;SS = 0x0000;
    33 00000064 BC007C                          mov     sp, BOOT_LOAD                   ;SP = 0x0000;
    34                                  
    35 00000067 FB                              sti                                     ;//割り込み許可(IF = 0)
    36                                  
    37 00000068 8816[8400]                      mov     [BOOT.DRIVE], dl                ;ブートドライブを保存
    38                                  
    39                                          ;---------------------------------------
    40                                          ;文字を表示
    41                                          ;---------------------------------------
    42 0000006C 68[7700]E8140083C4-             cdecl   puts, .s0                       ;puts(.s0);
    42 00000074 02                 
    43                                  
    44                                          ;---------------------------------------
    45                                          ;処理の終了
    46                                          ;---------------------------------------
    47 00000075 EBFE                            jmp     $                               ;while(1); //無限ループ
    48                                  
    49                                          ;---------------------------------------
    50                                          ;データ
    51                                          ;---------------------------------------
    52 00000077 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    52 00000080 2E0A0D00           
    53                                  
    54                                  ALIGN   2, db 0
    55                                  BOOT:                                           ;ブートドライブに関する情報
    56 00000084 0000                    .DRIVE:    dw 0                                 ;ドライブ番号
    57                                  
    58                                  ;********************************************************************************************************
    59                                  ;モジュール
    60                                  ;********************************************************************************************************
    61                                  %include        "..\modules\real\puts.s"
     1                              <1> puts:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  + 4| 文字列へのアドレス
     6                              <1>                                             ;  + 2| IP(戻り番号)
     7 00000086 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
     8 00000087 89E5                <1>         mov     bp, sp                      ;-----|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 00000089 50                  <1>         push    ax
    14 0000008A 53                  <1>         push    bx
    15 0000008B 56                  <1>         push    si
    16                              <1> 
    17                              <1>         ;---------------------------------------
    18                              <1>         ;引数の取得
    19                              <1>         ;---------------------------------------
    20 0000008C 8B7604              <1>         mov     si, [bp + 4]                    ;SI = 文字列へのアドレス
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;処理の開始
    24                              <1>         ;---------------------------------------
    25 0000008F B40E                <1>         mov     ah, 0x0E                        ;テレタイプ式1文字出力を指定
    26 00000091 BB0000              <1>         mov     bx, 0x0000                      ;ページ番号と文字色を0に設定
    27 00000094 FC                  <1>         cld                                     ;DF = 0; //アドレス加算
    28                              <1> .10L:                                           ;do
    29                              <1>                                                 ;{
    30 00000095 AC                  <1>         lodsb                                   ;       AL = *SI++;
    31                              <1> 
    32 00000096 3C00                <1>         cmp     al, 0                           ;       if(0 == AL)
    33 00000098 7404                <1>         je      .10E                            ;               break;
    34                              <1> 
    35 0000009A CD10                <1>         int     0x10                            ;       Int10(0x0E,AL); //文字出力
    36 0000009C EBF7                <1>         jmp     .10L                            ;
    37                              <1> .10E:                                           ;}while(1);
    38                              <1> 
    39                              <1>         ;---------------------------------------
    40                              <1>         ;レジスタの復帰
    41                              <1>         ;---------------------------------------
    42 0000009E 5E                  <1>         pop     si
    43 0000009F 5B                  <1>         pop     bx
    44 000000A0 58                  <1>         pop     ax
    45                              <1> 
    46                              <1>         ;---------------------------------------
    47                              <1>         ;スタックフレームの破棄
    48                              <1>         ;---------------------------------------
    49 000000A1 89EC                <1>         mov     sp, bp
    50 000000A3 5D                  <1>         pop     bp
    51                              <1> 
    52 000000A4 C3                  <1>         ret
    62                                  
    63                                  ;********************************************************************************************************
    64                                  ;ブートフラグ(先頭512バイトの終了)
    65                                  ;********************************************************************************************************
    66 000000A5 00<rept>                        times   510 - ($ - $$) db 0x00
    67 000001FE 55AA                            db 0x55, 0xAA
