     1                                  ;********************************************************************************************************
     2                                  ;マクロ
     3                                  ;********************************************************************************************************
     4                                  %include        "..\include\define.s"
     1                              <1> BOOT_LOAD   equ     0x7C00                  ;ブートプログラムのロード位置
     2                              <1> 
     3                              <1> BOOT_SIZE   equ     (1024 * 8)              ;ブートコードサイズ
     4                              <1> SECT_SIZE   equ     (512)                   ;セクタサイズ
     5                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     5                                  %include        "..\include\macro.s"
     1                              <1> struc drive
     2 00000000 <res 00000002>      <1>         .no         resw    1           ;ドライブ番号
     3 00000002 <res 00000002>      <1>         .cyln       resw    1           ;シリンダ
     4 00000004 <res 00000002>      <1>         .head       resw    1           ;ヘッド
     5 00000006 <res 00000002>      <1>         .sect       resw    1           ;セクタ
     6                              <1> endstruc
     7                              <1> 
     8                              <1> %macro  cdecl   1-*.nolist
     9                              <1> 
    10                              <1>     %rep    %0 - 1
    11                              <1>         push    %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1>     %rotate -1
    15                              <1> 
    16                              <1>         call    %1
    17                              <1> 
    18                              <1>     %if 1 < %0
    19                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    20                              <1>     %endif
    21                              <1> 
    22                              <1> %endmacro
     6                                  
     7                                          ORG     BOOT_LOAD                       ;ロードアドレスをアセンブラに指示
     8                                  
     9                                  ;********************************************************************************************************
    10                                  ;エントリポイント
    11                                  ;********************************************************************************************************
    12                                  entry:
    13                                          ;---------------------------------------
    14                                          ;BPB(BIOS Parameter Block)
    15                                          ;---------------------------------------
    16 00000000 EB58                            jmp ipl                                 ;IPL(Initial Program Loader)(ブートプログラム)へジャンプ
    17 00000002 90<rept>                        times   90 - ($ - $$) db 0x90
    18                                  
    19                                          ;---------------------------------------
    20                                          ;IPL(Initial Program Loader)
    21                                          ;---------------------------------------
    22                                  ipl:
    23 0000005A FA                              cli                                     ;//割り込み禁止(IF = 1)
    24                                  
    25 0000005B B80000                          mov     ax, 0x0000                      ;AX = 0x0000;
    26 0000005E 8ED8                            mov     ds, ax                          ;DS = 0x0000;
    27 00000060 8EC0                            mov     es, ax                          ;ES = 0x0000;
    28 00000062 8ED0                            mov     ss, ax                          ;SS = 0x0000;
    29 00000064 BC007C                          mov     sp, BOOT_LOAD                   ;SP = 0x7C00;
    30                                  
    31 00000067 FB                              sti                                     ;//割り込み許可(IF = 0)
    32                                  
    33                                          ;---------------------------------------
    34                                          ;ブートドライブ番号を保存
    35                                          ;---------------------------------------
    36 00000068 8816[B800]                      mov     [BOOT + drive.no], dl           ;ブートドライブを保存
    37                                  
    38                                          ;---------------------------------------
    39                                          ;文字列を表示
    40                                          ;---------------------------------------
    41 0000006C 68[9900]E84E0083C4-             cdecl   puts, .s0                       ;puts(.s0);
    41 00000074 02                 
    42                                          
    43                                          ;---------------------------------------
    44                                          ;残りのセクタをすべて読み込む
    45                                          ;---------------------------------------
    46 00000075 BB0F00                          mov     bx, BOOT_SECT - 1               ;BX = 残りのブートセクタ数;
    47 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE       ;CX = 次のロードアドレス;
    48                                  
    49 0000007B 515368[B800]E89B00-             cdecl   read_chs, BOOT, bx, cx          ;AX = read_chs(.chs, bx, cx);
    49 00000083 83C406             
    50                                  
    51 00000086 39D8                            cmp     ax, bx                          ;if(AX != 残りのセクタ数)
    52 00000088 740C                    .10Q:   jz      .10E                            ;{
    53 0000008A 68[A600]E8300083C4-     .10T:   cdecl   puts, .e0                       ;       puts(.e0);
    53 00000092 02                 
    54 00000093 E84900                          call    reboot                          ;       reboot();
    55                                  .10E:                                           ;}
    56                                  
    57                                          ;---------------------------------------
    58                                          ;次のステージへ移行
    59                                          ;---------------------------------------
    60 00000096 E92802                          jmp     stage_2                         ;ブート処理の第2ステージ
    61                                  
    62                                          ;---------------------------------------
    63                                          ;データ
    64                                          ;---------------------------------------
    65 00000099 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0
    65 000000A2 2E0A0D00           
    66 000000A6 4572726F723A736563-     .e0     db      "Error:sector read", 0
    66 000000AF 746F72207265616400 
    67                                  
    68                                  ;********************************************************************************************************
    69                                  ;ブートドライブに関する情報
    70                                  ;********************************************************************************************************
    71                                  ALIGN   2, db 0
    72                                  BOOT:                                           ;ブートドライブに関する情報
    73                                          istruc  drive
    74 000000B8 0000                            at      drive.no,       dw      0       ;ドライブ番号
    75 000000BA 0000                            at      drive.cyln,     dw      0       ;C:シリンダ
    76 000000BC 0000                            at      drive.head,     dw      0       ;H:ヘッド
    77 000000BE 0200                            at      drive.sect,     dw      2       ;S:セクタ
    78                                          iend
    79                                  
    80                                  ;********************************************************************************************************
    81                                  ;モジュール
    82                                  ;********************************************************************************************************
    83                                  %include        "..\modules\real\puts.s"
     1                              <1> puts:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  + 4| 文字列へのアドレス
     6                              <1>                                             ;  + 2| IP(戻り番号)
     7 000000C0 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
     8 000000C1 89E5                <1>         mov     bp, sp                      ;-----|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 000000C3 50                  <1>         push    ax
    14 000000C4 53                  <1>         push    bx
    15 000000C5 56                  <1>         push    si
    16                              <1> 
    17                              <1>         ;---------------------------------------
    18                              <1>         ;引数の取得
    19                              <1>         ;---------------------------------------
    20 000000C6 8B7604              <1>         mov     si, [bp + 4]                    ;SI = 文字列へのアドレス
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;処理の開始
    24                              <1>         ;---------------------------------------
    25 000000C9 B40E                <1>         mov     ah, 0x0E                        ;テレタイプ式1文字出力を指定
    26 000000CB BB0000              <1>         mov     bx, 0x0000                      ;ページ番号と文字色を0に設定
    27 000000CE FC                  <1>         cld                                     ;DF = 0; //アドレス加算
    28                              <1> .10L:                                           ;do
    29                              <1>                                                 ;{
    30 000000CF AC                  <1>         lodsb                                   ;       AL = *SI++;
    31                              <1> 
    32 000000D0 3C00                <1>         cmp     al, 0                           ;       if(0 == AL)
    33 000000D2 7404                <1>         je      .10E                            ;               break;
    34                              <1> 
    35 000000D4 CD10                <1>         int     0x10                            ;       Int10(0x0E,AL); //文字出力
    36 000000D6 EBF7                <1>         jmp     .10L                            ;
    37                              <1> .10E:                                           ;}while(1);
    38                              <1> 
    39                              <1>         ;---------------------------------------
    40                              <1>         ;レジスタの復帰
    41                              <1>         ;---------------------------------------
    42 000000D8 5E                  <1>         pop     si
    43 000000D9 5B                  <1>         pop     bx
    44 000000DA 58                  <1>         pop     ax
    45                              <1> 
    46                              <1>         ;---------------------------------------
    47                              <1>         ;スタックフレームの破棄
    48                              <1>         ;---------------------------------------
    49 000000DB 89EC                <1>         mov     sp, bp
    50 000000DD 5D                  <1>         pop     bp
    51                              <1> 
    52 000000DE C3                  <1>         ret
    84                                  %include        "..\modules\real\reboot.s"
     1                              <1> reboot:
     2                              <1>         ;-------------------------------------------
     3                              <1>         ;メッセージを表示                           
     4                              <1>         ;-------------------------------------------
     5 000000DF 68[FB00]E8DBFF83C4- <1>         cdecl   puts, .s0                           ;//再起動メッセージを表示
     5 000000E7 02                  <1>
     6                              <1> 
     7                              <1>         ;-------------------------------------------
     8                              <1>         ;キー入力待ち
     9                              <1>         ;-------------------------------------------
    10                              <1> .10L:                                               ;do
    11                              <1>                                                     ;{
    12 000000E8 B410                <1>         mov     ah, 0x10                            ;   //キー入力待ち
    13 000000EA CD16                <1>         int     0x16                                ;   AL = BIOS(0x16, 0x10);
    14                              <1>                                                     ;
    15 000000EC 3C20                <1>         cmp     al, ' '                             ;   ZF = (AL == ' ');
    16 000000EE 75F8                <1>         jne     .10L                                ;}while(!ZF);
    17                              <1> 
    18                              <1>         ;-------------------------------------------
    19                              <1>         ;改行を出力
    20                              <1>         ;-------------------------------------------
    21 000000F0 68[1901]E8CAFF83C4- <1>         cdecl   puts, .s1                           ;改行
    21 000000F8 02                  <1>
    22                              <1> 
    23                              <1>         ;-------------------------------------------
    24                              <1>         ;再起動
    25                              <1>         ;-------------------------------------------
    26 000000F9 CD19                <1>         int     0x19                                ;BIOS(0x19);    //reboot();
    27                              <1> 
    28                              <1>         ;-------------------------------------------
    29                              <1>         ;文字列データ
    30                              <1>         ;-------------------------------------------
    31 000000FB 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    31 00000104 414345206B65792074- <1>
    31 0000010D 6F207265626F6F742E- <1>
    31 00000116 2E2E00              <1>
    32 00000119 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    85                                  %include        "..\modules\real\read_chs.s"
     1                              <1> read_chs:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  + 8| コピー先
     6                              <1>                                             ;  + 6| セクタ数
     7                              <1>                                             ;  + 4| パラメータバッファ
     8                              <1>                                             ;-----|---------
     9                              <1>                                             ;  + 2| IP(戻り番号)
    10 0000011E 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
    11 0000011F 89E5                <1>         mov     bp, sp                      ;-----|---------
    12 00000121 6A03                <1>         push    3                           ;  - 2|retry = 3; //リトライ回数
    13 00000123 6A00                <1>         push    0                           ;  - 4|sect = 0; //読み込みセクタ数
    14                              <1> 
    15                              <1>         ;-----------------------------------
    16                              <1>         ;レジスタの保存
    17                              <1>         ;-----------------------------------
    18 00000125 53                  <1>         push    bx
    19 00000126 51                  <1>         push    cx
    20 00000127 52                  <1>         push    dx
    21 00000128 06                  <1>         push    es
    22 00000129 56                  <1>         push    si
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ;処理の開始
    26                              <1>         ;---------------------------------------
    27 0000012A 8B7604              <1>         mov     si, [bp + 4]                    ;SI = SRCバッファ(ドライブ情報構造体);
    28                              <1> 
    29                              <1>         ;---------------------------------------
    30                              <1>         ;CXレジスタの設定
    31                              <1>         ;(BIOSコールの呼び出しに適した形に変換)
    32                              <1>         ;---------------------------------------
    33 0000012D 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]       ;CH = シリンダ番号(下位バイト)
    34 00000130 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]       ;CL = シリンダ番号(上位バイト)
    35 00000133 C0E106              <1>         shl     cl, 6                           ;CL << 6; //最上位ビット2ビットにシフト
    36 00000136 0A4C06              <1>         or      cl, [si + drive.sect]           ;CL |= セクタ番号;
    37                              <1> 
    38                              <1>         ;---------------------------------------
    39                              <1>         ;セクタ読み込み
    40                              <1>         ;---------------------------------------
    41 00000139 8A7404              <1>         mov     dh, [si + drive.head]           ;DH = ヘッド番号;
    42 0000013C 8A14                <1>         mov     dl, [si + 0]                    ;DL = ドライブ番号;
    43 0000013E B80000              <1>         mov     ax, 0x0000                      ;AX = 0x0000;
    44 00000141 8EC0                <1>         mov     es, ax                          ;ES = セグメント
    45 00000143 8B5E08              <1>         mov     bx, [bp + 8]                    ;BX = コピー先;
    46                              <1> .10L:                                           ;do
    47                              <1>                                                 ;{
    48 00000146 B402                <1>         mov     ah, 0x02                        ;   AH = セクタ読み込み
    49 00000148 8A4606              <1>         mov     al, [bp + 6]                    ;   AL = セクタ数
    50                              <1>                                                 ;
    51 0000014B CD13                <1>         int     0x13                            ;   CF = BIOS(0x13, 0x02)
    52 0000014D 7304                <1>         jnc     .11E                            ;   if(CF)
    53                              <1>                                                 ;   {
    54 0000014F B000                <1>         mov     al, 0                           ;       AL = 0;
    55 00000151 EB0C                <1>         jmp     .10E                            ;       break;
    56                              <1> .11E:                                           ;   }
    57                              <1>                                                 ;
    58 00000153 3C00                <1>         cmp     al, 0                           ;   if(読み込んだセクタがあれば)
    59 00000155 7508                <1>         jne     .10E                            ;       break;
    60                              <1>                                                 ;
    61 00000157 B80000              <1>         mov     ax, 0                           ;   ret = 0; //戻り値を設定
    62 0000015A FF4EFE              <1>         dec     word [bp - 2]                   ;}
    63 0000015D 75E7                <1>         jnz     .10L                            ;while(--retry);
    64                              <1> .10E:
    65 0000015F B400                <1>         mov     ah, 0                           ;AH = 0; //ステータス情報は破棄
    66                              <1> 
    67                              <1>         ;---------------------------------------
    68                              <1>         ;レジスタの復帰
    69                              <1>         ;---------------------------------------
    70 00000161 5E                  <1>         pop     si
    71 00000162 07                  <1>         pop     es
    72 00000163 5A                  <1>         pop     dx
    73 00000164 59                  <1>         pop     cx
    74 00000165 5B                  <1>         pop     bx
    75                              <1> 
    76                              <1>         ;---------------------------------------
    77                              <1>         ;スタックフレームの破棄
    78                              <1>         ;---------------------------------------
    79 00000166 89EC                <1>         mov     sp, bp
    80 00000168 5D                  <1>         pop     bp
    81                              <1> 
    82 00000169 C3                  <1>         ret
    86                                  
    87                                  ;********************************************************************************************************
    88                                  ;ブートフラグ(先頭512バイトの終了)
    89                                  ;********************************************************************************************************
    90 0000016A 00<rept>                        times   510 - ($ - $$) db 0x00
    91 000001FE 55AA                            db 0x55, 0xAA
    92                                  
    93                                  ;********************************************************************************************************
    94                                  ;モジュール(先頭512バイト以降に配置)
    95                                  ;********************************************************************************************************
    96                                  %include        "..\modules\real\itoa.s"
     1                              <1> itoa:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  +12| フラグ
     6                              <1>                                             ;  +10| 基数
     7                              <1>                                             ;  + 8| バッファサイズ
     8                              <1>                                             ;  + 6| バッファアドレス
     9                              <1>                                             ;  + 4| 数値
    10                              <1>                                             ;  + 2| IP(戻り番号)
    11 00000200 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
    12 00000201 89E5                <1>         mov     bp, sp                      ;-----|---------
    13                              <1> 
    14                              <1>         ;-----------------------------------
    15                              <1>         ;レジスタの保存
    16                              <1>         ;-----------------------------------
    17 00000203 50                  <1>         push    ax
    18 00000204 53                  <1>         push    bx
    19 00000205 51                  <1>         push    cx
    20 00000206 52                  <1>         push    dx
    21 00000207 56                  <1>         push    si
    22 00000208 57                  <1>         push    di
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ;引数の取得
    26                              <1>         ;---------------------------------------
    27 00000209 8B4604              <1>         mov     ax, [bp + 4]                    ;ax(val) =  数値;
    28 0000020C 8B7606              <1>         mov     si, [bp + 6]                    ;si(dst) = バッファアドレス;
    29 0000020F 8B4E08              <1>         mov     cx, [bp + 8]                    ;cx(size) = バッファサイズ;
    30                              <1> 
    31 00000212 89F7                <1>         mov     di, si                          ; di = si(dst); //バッファの最後尾
    32 00000214 01CF                <1>         add     di, cx                          ;di(dst) = di + cx - 1;
    33 00000216 4F                  <1>         dec     di
    34                              <1> 
    35 00000217 8B5E0C              <1>         mov     bx, word [bp + 12]              ;flags = オプション;
    36                              <1> 
    37                              <1>         ;---------------------------------------
    38                              <1>         ;符号付き判定
    39                              <1>         ;---------------------------------------
    40 0000021A F7C30100            <1>         test    bx, 0b0001                       ;if(flags & 0x01) //符号付き
    41 0000021E 7408                <1> .10Q:   je      .10E                            ;{
    42 00000220 83F800              <1>         cmp     ax, 0                           ;   if(val < 0)
    43 00000223 7D03                <1> .12Q:   jge     .12E                            ;   {
    44 00000225 83CB02              <1>         or      bx, 0b0010                      ;       flags |= 2; //符号表示
    45                              <1> .12E:                                           ;   }
    46                              <1> .10E:                                           ;}
    47                              <1> 
    48                              <1>         ;---------------------------------------
    49                              <1>         ;符号付き判定
    50                              <1>         ;---------------------------------------
    51 00000228 F7C30200            <1>         test    bx, 0b0010                      ;if(flags & 0x02) //符号出力判定
    52 0000022C 7410                <1> .20Q:   je      .20E                            ;{
    53 0000022E 83F800              <1>         cmp     ax, 0                           ;   if(val < 0)
    54 00000231 7D07                <1> .22Q:   jge     .22F                            ;   {
    55 00000233 F7D8                <1>         neg     ax                              ;       val *= -1; //符号反転
    56 00000235 C6042D              <1>         mov     [si], byte '-'                  ;       *dst = '-'; //符号表示
    57 00000238 EB03                <1>         jmp     .22E                            ;   }
    58                              <1> .22F:                                           ;   else
    59                              <1>                                                 ;   {
    60 0000023A C6042B              <1>         mov     [si], byte '+'                  ;       *dst = '+'; //符号表示
    61                              <1> .22E:                                           ;   }
    62 0000023D 49                  <1>         dec     cx                              ;   size--;     //残りバッファサイズの減算
    63                              <1> .20E:                                           ;}
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;ASCII変換
    67                              <1>         ;---------------------------------------
    68 0000023E 8B5E0A              <1>         mov     bx, [bp + 10]                   ;BX = 基数;
    69                              <1> .30L:                                           ;do
    70                              <1>                                                 ;{
    71 00000241 BA0000              <1>         mov     dx, 0                           ;
    72 00000244 F7F3                <1>         div     bx                              ;   DX = DX:AX % 基数;
    73                              <1>                                                 ;   AX = DX:AX / 基数;
    74                              <1>                                                 ;
    75 00000246 89D6                <1>         mov     si, dx                          ;   //テーブル参照
    76 00000248 8A94[7002]          <1>         mov     dl, byte [.ascii + si]          ;   DL = ASCII[DX]
    77                              <1>                                                 ;
    78 0000024C 8815                <1>         mov     [di], dl                        ;   *dst = DL;
    79 0000024E 4F                  <1>         dec     di                              ;   dst--;
    80                              <1>                                                 ;
    81 0000024F 83F800              <1>         cmp     ax, 0                           ;
    82 00000252 E0ED                <1>         loopnz  .30L                            ;}while(AX);
    83                              <1> .30E:
    84                              <1> 
    85                              <1>         ;---------------------------------------
    86                              <1>         ;空欄を埋める
    87                              <1>         ;---------------------------------------
    88 00000254 83F900              <1>         cmp     cx, 0                           ;if(size)
    89 00000257 740D                <1> .40Q:   je      .40E                            ;{
    90 00000259 B020                <1>         mov     al, ' '                         ;       AL = ' '; // ' 'で埋める(デフォルト値)
    91 0000025B 837E0C04            <1>         cmp     [bp + 12], word 0b0100          ;       if(flags & 0x04)
    92 0000025F 7502                <1> .42Q:   jne     .42E                            ;           {
    93 00000261 B030                <1>         mov     al, '0'                         ;               AL = '0'; // '0'で埋める
    94                              <1> .42E:                                           ;           }
    95 00000263 FD                  <1>         std                                     ;       // DF = 1(-方向)
    96 00000264 F3AA                <1>         rep     stosb                           ;       while(--CX) *DI -- = AL;
    97                              <1> .40E:                                           ;}
    98                              <1>         
    99                              <1>         ;---------------------------------------
   100                              <1>         ;レジスタの復帰
   101                              <1>         ;---------------------------------------
   102 00000266 5F                  <1>         pop     di
   103 00000267 5E                  <1>         pop     si
   104 00000268 5A                  <1>         pop     dx
   105 00000269 59                  <1>         pop     cx
   106 0000026A 5B                  <1>         pop     bx
   107 0000026B 58                  <1>         pop     ax
   108                              <1> 
   109                              <1>         ;---------------------------------------
   110                              <1>         ;スタックフレームの破棄
   111                              <1>         ;---------------------------------------
   112 0000026C 89EC                <1>         mov     sp, bp
   113 0000026E 5D                  <1>         pop     bp
   114                              <1> 
   115 0000026F C3                  <1>         ret
   116                              <1> 
   117 00000270 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"              ;変換テーブル
   117 00000279 39414243444546      <1>
    97                                  %include        "..\modules\real\get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;  + 4| パラメータバッファ
     6                              <1>                                             ;  + 2| IP(戻り番号)
     7 00000280 55                  <1>         push    bp                          ;BP+ 0| BP(元の値)
     8 00000281 89E5                <1>         mov     bp, sp                      ;-----|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 00000283 53                  <1>         push    bx
    14 00000284 51                  <1>         push    cx
    15 00000285 06                  <1>         push    es
    16 00000286 56                  <1>         push    si
    17 00000287 57                  <1>         push    di
    18                              <1> 
    19                              <1>         ;---------------------------------------
    20                              <1>         ;処理の開始
    21                              <1>         ;---------------------------------------
    22 00000288 8B7604              <1>         mov     si, [bp + 4]                    ;SI = バッファ
    23                              <1>         
    24 0000028B B80000              <1>         mov     ax, 0                           ;Disk Base Table Pointerの初期化
    25 0000028E 8EC0                <1>         mov     es, ax                          ;ES = 0;
    26 00000290 89C7                <1>         mov     di, ax                          ;DI = 0;
    27                              <1> 
    28 00000292 B408                <1>         mov     ah, 8                           ; //get drive parameters
    29 00000294 8A14                <1>         mov     dl, [si + drive.no]              ;DL = ドライブ番号
    30 00000296 CD13                <1>         int     0x13
    31 00000298 721B                <1> .10Q:   jc     .10F                            ;if(0 == CF)
    32                              <1> .10T:                                           ;{
    33 0000029A 88C8                <1>         mov     al, cl                          ;   AX = セクタ数
    34 0000029C 83E03F              <1>         and     ax, 0x3F                        ;   //下位6ビットのみ有効
    35                              <1> 
    36 0000029F C0E906              <1>         shr     cl, 6                           ;CX = シリンダ数
    37 000002A2 C1C908              <1>         ror     cx, 8
    38 000002A5 41                  <1>         inc     cx
    39                              <1> 
    40 000002A6 0FB6DE              <1>         movzx   bx, dh
    41 000002A9 43                  <1>         inc     bx
    42                              <1> 
    43 000002AA 894C02              <1>         mov     [si + drive.cyln], cx           ;drive.cyln = CX; //C:シリンダ数
    44 000002AD 895C04              <1>         mov     [si + drive.head], bx           ;drive.head = BX; //H:ヘッド数
    45 000002B0 894406              <1>         mov     [si + drive.sect], ax           ;drive.sect = AX; //S:セクタ数
    46                              <1> 
    47 000002B3 EB03                <1>         jmp     .10E                            ;}
    48                              <1> .10F:                                           ;else
    49                              <1>                                                 ;{
    50 000002B5 B80000              <1>         mov     ax, 0                           ;   AX = 0; //失敗
    51                              <1> .10E:                                           ;}
    52                              <1> 
    53                              <1>         ;---------------------------------------
    54                              <1>         ;レジスタの復帰
    55                              <1>         ;---------------------------------------
    56 000002B8 5F                  <1>         pop     di
    57 000002B9 5E                  <1>         pop     si
    58 000002BA 07                  <1>         pop     es
    59 000002BB 59                  <1>         pop     cx
    60 000002BC 5B                  <1>         pop     bx
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ;スタックフレームの破棄
    64                              <1>         ;---------------------------------------
    65 000002BD 89EC                <1>         mov     sp, bp
    66 000002BF 5D                  <1>         pop     bp
    67                              <1> 
    68 000002C0 C3                  <1>         ret
    98                                  
    99                                  ;********************************************************************************************************
   100                                  ;ブート処理の第2ステージ
   101                                  ;********************************************************************************************************
   102                                  stage_2:
   103                                          ;---------------------------------------
   104                                          ;文字列の表示
   105                                          ;---------------------------------------
   106 000002C1 68[3B03]E8F9FD83C4-             cdecl puts, .s0                         ;puts(.s0);
   106 000002C9 02                 
   107                                  
   108                                  
   109                                          ;---------------------------------------
   110                                          ;ドライブ情報を取得
   111                                          ;---------------------------------------
   112 000002CA 68[B800]E8B0FF83C4-             cdecl   get_drive_param, BOOT           ;get_drive_param(DX, BOOT.CYLN);
   112 000002D2 02                 
   113 000002D3 83F800                          cmp     ax, 0                           ;if(0 == AX)
   114 000002D6 750C                    .10Q:   jne     .10E                            ;{
   115 000002D8 68[7203]E8E2FD83C4-             cdecl   puts, .e0                       ;       puts(.e0);
   115 000002E0 02                 
   116 000002E1 E8FBFD                          call reboot                             ;       reboot(); //再起動
   117                                  .10E:                                           ;}
   118                                  
   119                                          ;---------------------------------------
   120                                          ;ドライブ情報を表示
   121                                          ;---------------------------------------
   122 000002E4 A1[B800]                        mov     ax, [BOOT + drive.no]           ;AX = ブートドライブ;
   123 000002E7 6A046A106A0268-                 cdecl   itoa, ax, .p1, 2, 16, 0b0100    ;
   123 000002EE [5303]50E80CFF83C4-
   123 000002F6 0A                 
   124 000002F7 A1[BA00]                        mov     ax, [BOOT + drive.cyln]         ;
   125 000002FA 6A046A106A0468-                 cdecl   itoa, ax, .p2, 4, 16, 0b0100    ;
   125 00000301 [5B03]50E8F9FE83C4-
   125 00000309 0A                 
   126 0000030A A1[BC00]                        mov     ax, [BOOT + drive.head]         ;AX = ヘッド数
   127 0000030D 6A046A106A0268-                 cdecl   itoa, ax, .p3, 2, 16, 0b0100    ;
   127 00000314 [6503]50E8E6FE83C4-
   127 0000031C 0A                 
   128 0000031D A1[BE00]                        mov     ax, [BOOT + drive.sect]         ;AX = トラック当たりのセクタ数
   129 00000320 6A046A106A0268-                 cdecl   itoa, ax, .p4, 2, 16, 0b0100    ;
   129 00000327 [6D03]50E8D3FE83C4-
   129 0000032F 0A                 
   130 00000330 68[4A03]E88AFD83C4-             cdecl   puts, .s1
   130 00000338 02                 
   131                                  
   132                                          ;---------------------------------------
   133                                          ;処理の終了
   134                                          ;---------------------------------------
   135 00000339 EBFE                            jmp     $                               ;while(1); //無限ループ
   136                                  
   137                                          ;---------------------------------------
   138                                          ;データ
   139                                          ;---------------------------------------
   140 0000033B 326E64207374616765-     .s0     db      "2nd stage...", 0x0A, 0x0D, 0
   140 00000344 2E2E2E0A0D00       
   141                                  
   142 0000034A 2044726976653A3078      .s1     db      " Drive:0x"
   143 00000353 2D2D2C20433A3078        .p1     db      "--, C:0x"
   144 0000035B 2D2D2D2D2C20483A30-     .p2     db      "----, H:0x"
   144 00000364 78                 
   145 00000365 2D2D2C20533A3078        .p3     db      "--, S:0x"
   146 0000036D 2D2D0A0D00              .p4     db      "--", 0x0A, 0x0D, 0
   147                                  
   148 00000372 43616E277420676574-     .e0     db      "Can't get drive parameter.", 0
   148 0000037B 206472697665207061-
   148 00000384 72616D657465722E00 
   149                                  
   150                                  ;********************************************************************************************************
   151                                  ;パディング
   152                                  ;********************************************************************************************************
   153 0000038D 00<rept>                        times BOOT_SIZE - ($ - $$)     db 0    ;パディング
