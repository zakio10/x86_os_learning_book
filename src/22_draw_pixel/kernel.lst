     1                                  ;********************************************************************************************************
     2                                  ;マクロ
     3                                  ;********************************************************************************************************
     4                                  %include        "..\include\define.s"
     1                              <1> SECT_SIZE   equ     (512)                   ;セクタサイズ
     2                              <1> 
     3                              <1> BOOT_LOAD   equ     0x7C00                  ;ブートプログラムのロード位置
     4                              <1> BOOT_END    equ     (BOOT_LOAD + BOOT_SIZE)
     5                              <1> BOOT_SIZE   equ     (1024 * 8)              ;ブートコードサイズ
     6                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     7                              <1> 
     8                              <1> KERNEL_LOAD equ     0x0010_1000
     9                              <1> KERNEL_SIZE equ     (1024*8)                ;カーネルサイズ
    10                              <1> KERNEL_SECT equ     (KERNEL_SIZE / SECT_SIZE)
    11                              <1> 
    12                              <1> E820_RECORD_SIZE    equ 20
     5                                  %include        "..\include\macro.s"
     1                              <1> struc drive
     2 00000000 <res 00000002>      <1>         .no         resw    1           ;ドライブ番号
     3 00000002 <res 00000002>      <1>         .cyln       resw    1           ;シリンダ
     4 00000004 <res 00000002>      <1>         .head       resw    1           ;ヘッド
     5 00000006 <res 00000002>      <1>         .sect       resw    1           ;セクタ
     6                              <1> endstruc
     7                              <1> 
     8                              <1> %macro  cdecl   1-*.nolist
     9                              <1> 
    10                              <1>     %rep    %0 - 1
    11                              <1>         push    %{-1:-1}
    12                              <1>         %rotate -1
    13                              <1>     %endrep
    14                              <1>     %rotate -1
    15                              <1> 
    16                              <1>         call    %1
    17                              <1> 
    18                              <1>     %if 1 < %0
    19                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    20                              <1>     %endif
    21                              <1> 
    22                              <1> %endmacro
     6                                  
     7                                          ORG     KERNEL_LOAD                             ;カーネルのロードアドレス
     8                                  
     9                                  [BITS 32]
    10                                  ;********************************************************************************************************
    11                                  ;エントリポイント
    12                                  ;********************************************************************************************************
    13                                  kernel:
    14                                          ;---------------------------------------
    15                                          ;フォントアドレスを取得
    16                                          ;---------------------------------------
    17 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ;ESI = 0x7C00 + 512
    18 00000005 0FB706                          movzx   eax, word [esi + 0]             ;EAX = [ESI + 0] //セグメント
    19 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ;EBX = [ESI + 2] //オフセット
    20 0000000C C1E004                          shl     eax, 4                          ;EAX << 4;
    21 0000000F 01D8                            add     eax, ebx                        ;EAX += EBX;
    22 00000011 A3[4C010000]                    mov     [FONT_ADR], eax                 ;FONT_ADR[0] = EAX;
    23                                  
    24                                          ;---------------------------------------
    25                                          ;文字の表示
    26                                          ;---------------------------------------
    27 00000016 6A0D6A3FE8AA020000-             cdecl   draw_font, 63, 13
    27 0000001F 6683C408           
    28                                  
    29                                          ;---------------------------------------
    30                                          ;文字列の表示
    31                                          ;---------------------------------------
    32 00000023 68[39010000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0   ;draw_str();
    32 0000002B 00006A0E6A19E8D602-
    32 00000034 00006683C410       
    33                                  
    34                                          ;---------------------------------------
    35                                          ;カラーバーの表示
    36                                          ;---------------------------------------
    37 0000003A 6A046A3FE812030000-             cdecl   draw_color_bar, 63, 4
    37 00000043 6683C408           
    38                                  
    39                                          ;---------------------------------------
    40                                          ;点を描画する
    41                                          ;---------------------------------------
    42 00000047 6A016A046A08E87B03-             cdecl   draw_pixel,  8,  4, 0x01
    42 00000050 00006683C40C       
    43 00000056 6A016A056A09E86C03-             cdecl   draw_pixel,  9,  5, 0x01
    43 0000005F 00006683C40C       
    44 00000065 6A026A066A0AE85D03-             cdecl   draw_pixel, 10,  6, 0x02
    44 0000006E 00006683C40C       
    45 00000074 6A026A076A0BE84E03-             cdecl   draw_pixel, 11,  7, 0x02
    45 0000007D 00006683C40C       
    46 00000083 6A036A086A0CE83F03-             cdecl   draw_pixel, 12,  8, 0x03
    46 0000008C 00006683C40C       
    47 00000092 6A036A096A0DE83003-             cdecl   draw_pixel, 13,  9, 0x03
    47 0000009B 00006683C40C       
    48 000000A1 6A046A0A6A0EE82103-             cdecl   draw_pixel, 14, 10, 0x04
    48 000000AA 00006683C40C       
    49 000000B0 6A046A0B6A0FE81203-             cdecl   draw_pixel, 15, 11, 0x04
    49 000000B9 00006683C40C       
    50                                  
    51 000000BF 6A036A046A0FE80303-             cdecl   draw_pixel, 15,  4, 0x03
    51 000000C8 00006683C40C       
    52 000000CE 6A036A056A0EE8F402-             cdecl   draw_pixel, 14,  5, 0x03
    52 000000D7 00006683C40C       
    53 000000DD 6A046A066A0DE8E502-             cdecl   draw_pixel, 13,  6, 0x04
    53 000000E6 00006683C40C       
    54 000000EC 6A046A076A0CE8D602-             cdecl   draw_pixel, 12,  7, 0x04
    54 000000F5 00006683C40C       
    55 000000FB 6A016A086A0BE8C702-             cdecl   draw_pixel, 11,  8, 0x01
    55 00000104 00006683C40C       
    56 0000010A 6A016A096A0AE8B802-             cdecl   draw_pixel, 10,  9, 0x01
    56 00000113 00006683C40C       
    57 00000119 6A026A0A6A09E8A902-             cdecl   draw_pixel,  9, 10, 0x02
    57 00000122 00006683C40C       
    58 00000128 6A026A0B6A08E89A02-             cdecl   draw_pixel,  8, 11, 0x02
    58 00000131 00006683C40C       
    59                                  
    60                                  
    61                                          ;---------------------------------------
    62                                          ;処理の終了
    63                                          ;---------------------------------------
    64 00000137 EBFE                            jmp     $                               ;while(1) //無限ループ
    65                                  
    66                                  
    67                                  
    68 00000139 2048656C6C6F2C206B-     .s0:    db      " Hello, kernel! ", 0
    68 00000142 65726E656C212000   
    69                                  
    70 0000014A 00<rept>                ALIGN   4, db   0
    71 0000014C 00000000                FONT_ADR:       dd      0
    72                                  
    73                                  ;********************************************************************************************************
    74                                  ;モジュール
    75                                  ;********************************************************************************************************
    76                                  %include        "..\modules\protect\vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   + 8| 読み込みプレーン(0~3)
     6                              <1>                                             ;   + 4| IP(戻り番号)
     7 00000150 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     8 00000151 89E5                <1>         mov    ebp, esp                     ;------|---------
     9                              <1> 
    10                              <1>         ;-----------------------------------
    11                              <1>         ;レジスタの保存
    12                              <1>         ;-----------------------------------
    13 00000153 6650                <1>         push    ax
    14 00000155 6652                <1>         push    dx
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ;読み込みプレーンの選択
    18                              <1>         ;---------------------------------------
    19 00000157 8A6508              <1>         mov     ah, [ebp + 8]                   ;AH = プレーンの選択(3 = 輝度, 2~0 = RGB)
    20 0000015A 80E403              <1>         and     ah, 0x03                        ;AH &= 0x03; //余計なビットをマスク
    21 0000015D B004                <1>         mov     al, 0x04                        ;AL = 読み込みマップ選択レジスタ
    22 0000015F 66BACE03            <1>         mov     dx, 0x03CE                      ;DX = グラフィックス制御ポート
    23 00000163 66EF                <1>         out     dx, ax                          ;//ポート出力
    24                              <1>         
    25                              <1>         ;---------------------------------------
    26                              <1>         ;レジスタの復帰
    27                              <1>         ;---------------------------------------
    28 00000165 665A                <1>         pop     dx
    29 00000167 6658                <1>         pop     ax
    30                              <1> 
    31                              <1>         ;---------------------------------------
    32                              <1>         ;スタックフレームの破棄
    33                              <1>         ;---------------------------------------
    34 00000169 89EC                <1>         mov     esp, ebp
    35 0000016B 5D                  <1>         pop     ebp
    36                              <1> 
    37 0000016C C3                  <1>         ret
    38                              <1> 
    39                              <1> vga_set_write_plane:
    40                              <1>         ;-----------------------------------
    41                              <1>         ;スタックフレームの構築
    42                              <1>         ;-----------------------------------
    43                              <1>                                             ;   + 8| 書き込みプレーン
    44                              <1>                                             ;   + 4| IP(戻り番号)
    45 0000016D 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    46 0000016E 89E5                <1>         mov    ebp, esp                     ;------|---------
    47                              <1> 
    48                              <1>         ;-----------------------------------
    49                              <1>         ;レジスタの保存
    50                              <1>         ;-----------------------------------
    51 00000170 6650                <1>         push    ax
    52 00000172 6652                <1>         push    dx
    53                              <1> 
    54                              <1>         ;---------------------------------------
    55                              <1>         ;読み込みプレーンの選択
    56                              <1>         ;---------------------------------------
    57 00000174 8A6508              <1>         mov     ah, [ebp + 8]                   ;AH = プレーンの選択(3 = 輝度, 2~0 = RGB)
    58 00000177 80E40F              <1>         and     ah, 0x0F                        ;AH &= 0x03; //余計なビットをマスク
    59 0000017A B002                <1>         mov     al, 0x02                        ;AL = 読み込みマップ選択レジスタ
    60 0000017C 66BAC403            <1>         mov     dx, 0x03C4                      ;DX = グラフィックス制御ポート
    61 00000180 66EF                <1>         out     dx, ax                          ;//ポート出力
    62                              <1>         
    63                              <1>         ;---------------------------------------
    64                              <1>         ;レジスタの復帰
    65                              <1>         ;---------------------------------------
    66 00000182 665A                <1>         pop     dx
    67 00000184 6658                <1>         pop     ax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ;スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 00000186 89EC                <1>         mov     esp, ebp
    73 00000188 5D                  <1>         pop     ebp
    74                              <1> 
    75 00000189 C3                  <1>         ret
    76                              <1> 
    77                              <1> vram_font_copy:
    78                              <1>         ;-----------------------------------
    79                              <1>         ;スタックフレームの構築
    80                              <1>         ;-----------------------------------
    81                              <1>                                             ;EBP+20| 描画色
    82                              <1>                                             ;EBP+16| 出力プレーン(1つのプレーンのみをビットで指定)
    83                              <1>                                             ;EBP+12| VRAMアドレス
    84                              <1>                                             ;   + 8| FONTアドレス
    85                              <1>                                             ;   + 4| IP(戻り番号)
    86 0000018A 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    87 0000018B 89E5                <1>         mov    ebp, esp                     ;------|---------
    88                              <1> 
    89                              <1>         ;-----------------------------------
    90                              <1>         ;レジスタの保存
    91                              <1>         ;-----------------------------------
    92 0000018D 50                  <1>         push    eax
    93 0000018E 53                  <1>         push    ebx
    94 0000018F 51                  <1>         push    ecx
    95 00000190 57                  <1>         push    edi
    96 00000191 52                  <1>         push    edx
    97 00000192 56                  <1>         push    esi
    98                              <1> 
    99                              <1>         ;---------------------------------------
   100                              <1>         ;引数を変数に代入
   101                              <1>         ;---------------------------------------
   102 00000193 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = フォントアドレス;
   103 00000196 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = VRAMアドレス;
   104 00000199 0FB64510            <1>         movzx   eax, byte [ebp +16]             ;EAX = プレーン(ビット指定);
   105 0000019D 0FB75D14            <1>         movzx   ebx, word [ebp +20]             ;EBX = 描画色
   106                              <1> 
   107                              <1>         ;---------------------------------------
   108                              <1>         ;マスクデータを作成(プレーンと景色が一致時に0xFFに。不一致時に0x00に。)
   109                              <1>         ;---------------------------------------
   110 000001A1 84C7                <1>         test    bh, al                          ;ZF = (背景色 & プレーン)
   111 000001A3 0F94C6              <1>         setz    dh                              ;if(ZF == 1){ DH = 0x00; }else{ DH = 0x01;}
   112 000001A6 FECE                <1>         dec     dh                              ;DH--; // 0xFF or 0x00
   113                              <1> 
   114 000001A8 84C3                <1>         test    bl, al                          ;ZF = (前景色 & プレーン);
   115 000001AA 0F94C2              <1>         setz    dl                              ;if(ZF == 1){ DL = 0x00; }else{ DL = 0x01;}
   116 000001AD FECA                <1>         dec     dl                              ;DL--; //0xFF or 0x00
   117                              <1> 
   118                              <1>         ;---------------------------------------
   119                              <1>         ;16ビットフォントのコピー
   120                              <1>         ;---------------------------------------
   121 000001AF FC                  <1>         cld                                     ;DF = 0; //アドレス加算
   122                              <1> 
   123 000001B0 B910000000          <1>         mov     ecx, 16                         ;ECX = 16; //16ドット
   124                              <1> .10L:                                           ;do
   125                              <1>                                                 ;{
   126                              <1>         ;---------------------------------------
   127                              <1>         ;フォントマスクの作成
   128                              <1>         ;---------------------------------------
   129 000001B5 AC                  <1>         lodsb                                   ;   AL = *ESI++; //フォント
   130 000001B6 88C4                <1>         mov     ah, al                          ;   AH = AL;
   131 000001B8 F6D4                <1>         not     ah                              ;   AH ~= AH; //!フォント(ビット反転)
   132                              <1> 
   133                              <1>         ;---------------------------------------
   134                              <1>         ;前景色
   135                              <1>         ;---------------------------------------
   136 000001BA 20D0                <1>         and     al, dl                          ;   AL = 前景色 & フォント;
   137                              <1> 
   138                              <1>         ;---------------------------------------
   139                              <1>         ;背景色
   140                              <1>         ;---------------------------------------
   141 000001BC F7C310000000        <1>         test    ebx, 0x0010                     ;if(透過モード)
   142 000001C2 7404                <1>         jz      .11F                            ;{
   143 000001C4 2227                <1>         and     ah, [edi]                       ;   AH = !フォント & [EDI] //現在値
   144 000001C6 EB02                <1>         jmp     .11E                            ;}
   145                              <1> .11F:                                           ;else
   146                              <1>                                                 ;{
   147 000001C8 20F4                <1>         and     ah, dh                          ;   AH = !フォント & 背景色
   148                              <1> .11E:                                           ;}
   149                              <1> 
   150                              <1>         ;---------------------------------------
   151                              <1>         ;前景色と背景色を合成
   152                              <1>         ;---------------------------------------
   153 000001CA 08E0                <1>         or  al, ah                              ;   AL = 背景 | 前景;
   154                              <1> 
   155                              <1>         ;---------------------------------------
   156                              <1>         ;新しい値を出力（VRAMに代入)
   157                              <1>         ;---------------------------------------
   158 000001CC 8807                <1>         mov     [edi], al                       ;   [EDI] = AL; //プレーンに書き込む
   159                              <1> 
   160 000001CE 83C750              <1>         add     edi, 80                         ;   EDI += 80;
   161 000001D1 E2E2                <1>         loop    .10L                            ;}while(--ECX);
   162                              <1> .10E:
   163                              <1>         ;---------------------------------------
   164                              <1>         ;レジスタの復帰
   165                              <1>         ;---------------------------------------
   166 000001D3 5E                  <1>         pop     esi
   167 000001D4 5A                  <1>         pop     edx
   168 000001D5 5F                  <1>         pop     edi
   169 000001D6 59                  <1>         pop     ecx
   170 000001D7 5B                  <1>         pop     ebx
   171 000001D8 58                  <1>         pop     eax
   172                              <1> 
   173                              <1>         ;---------------------------------------
   174                              <1>         ;スタックフレームの破棄
   175                              <1>         ;---------------------------------------
   176 000001D9 89EC                <1>         mov     esp, ebp
   177 000001DB 5D                  <1>         pop     ebp
   178                              <1> 
   179 000001DC C3                  <1>         ret
   180                              <1> 
   181                              <1> vram_bit_copy:
   182                              <1>         ;-----------------------------------
   183                              <1>         ;スタックフレームの構築
   184                              <1>         ;-----------------------------------
   185                              <1>                                             ;EBP+20| 描画色
   186                              <1>                                             ;EBP+16| 出力プレーン(1つのプレーンのみをビットで指定)
   187                              <1>                                             ;EBP+12| VRAMアドレス
   188                              <1>                                             ;   + 8| 出力ビットパターン
   189                              <1>                                             ;   + 4| IP(戻り番号)
   190 000001DD 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
   191 000001DE 89E5                <1>         mov    ebp, esp                     ;------|---------
   192                              <1> 
   193                              <1>         ;-----------------------------------
   194                              <1>         ;レジスタの保存
   195                              <1>         ;-----------------------------------
   196 000001E0 50                  <1>         push    eax
   197 000001E1 53                  <1>         push    ebx
   198 000001E2 57                  <1>         push    edi
   199                              <1> 
   200                              <1>         ;---------------------------------------
   201                              <1>         ;引数を変数に代入
   202                              <1>         ;---------------------------------------
   203 000001E3 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = VRAMアドレス;
   204 000001E6 0FB64510            <1>         movzx   eax, byte [ebp +16]             ;EAX = プレーン(ビット指定);
   205 000001EA 0FB75D14            <1>         movzx   ebx, word [ebp +20]             ;EBX = 描画色
   206                              <1> 
   207                              <1>         ;---------------------------------------
   208                              <1>         ;マスクデータを作成(プレーンと景色が一致時に0xFFに。不一致時に0x00に。)
   209                              <1>         ;---------------------------------------
   210 000001EE 84C3                <1>         test    bl, al                          ;ZF = (前景色 & プレーン);
   211 000001F0 0F94C3              <1>         setz    bl                              ;if(ZF == 1){ DL = 0x00; }else{ DL = 0x01;}
   212 000001F3 FECB                <1>         dec     bl                              ;DL--; //0xFF or 0x00
   213                              <1> 
   214                              <1>         ;---------------------------------------
   215                              <1>         ;背景のマスクを作成
   216                              <1>         ;---------------------------------------
   217 000001F5 8A4508              <1>         mov     al, [ebp + 8]                   ;AL = 出力ビットパターン;
   218 000001F8 88C4                <1>         mov     ah, al                          ;AH ~= AL; //!出力ビットパターン(ビット反転)
   219 000001FA F6D4                <1>         not     ah
   220                              <1> 
   221                              <1>         ;---------------------------------------
   222                              <1>         ;背景色
   223                              <1>         ;---------------------------------------
   224 000001FC 2227                <1>         and     ah, [edi]                       ;AH = 現在値 & !出力ビットパターン
   225 000001FE 20D8                <1>         and     al, bl                          ;AL = 表示色 & 出力ビットパターン
   226 00000200 08E0                <1>         or      al, ah                          ;AL |= AH;
   227 00000202 8807                <1>         mov     [edi], al                       ;[EDI] = BL; //プレーンに書き込む
   228                              <1> 
   229                              <1>         ;---------------------------------------
   230                              <1>         ;レジスタの復帰
   231                              <1>         ;---------------------------------------
   232 00000204 5F                  <1>         pop     edi
   233 00000205 5B                  <1>         pop     ebx
   234 00000206 58                  <1>         pop     eax
   235                              <1> 
   236                              <1>         ;---------------------------------------
   237                              <1>         ;スタックフレームの破棄
   238                              <1>         ;---------------------------------------
   239 00000207 89EC                <1>         mov     esp, ebp
   240 00000209 5D                  <1>         pop     ebp
   241                              <1> 
   242 0000020A C3                  <1>         ret
    77                                  %include        "..\modules\protect\draw_char.s"
     1                              <1> draw_char:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +20| 文字
     6                              <1>                                             ;   +16| 描画色
     7                              <1>                                             ;   +12| 行(0~29)
     8                              <1>                                             ;   + 8| 列(0~79)
     9                              <1>                                             ;   + 4| IP(戻り番号)
    10 0000020B 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    11 0000020C 89E5                <1>         mov    ebp, esp                     ;------|---------
    12                              <1> 
    13                              <1>         ;-----------------------------------
    14                              <1>         ;レジスタの保存
    15                              <1>         ;-----------------------------------
    16 0000020E 53                  <1>         push    ebx
    17 0000020F 57                  <1>         push    edi
    18 00000210 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;コピー元フォントアドレスを設定
    22                              <1>         ;---------------------------------------
    23 00000211 0FB67514            <1>         movzx   esi, byte [ebp +20]             ;CL = 文字コード;
    24 00000215 C1E604              <1>         shl     esi, 4                          ;CL *= 16; //1文字16バイト
    25 00000218 0335[4C010000]      <1>         add     esi, [FONT_ADR]                 ;ESI = フォントアドレス;
    26                              <1> 
    27                              <1>         ;---------------------------------------
    28                              <1>         ;コピー先アドレスを取得
    29                              <1>         ;adr = 0xA0000 + (640 / 8 * 16) * y + x
    30                              <1>         ;---------------------------------------
    31 0000021E 8B7D0C              <1>         mov     edi, [ebp +12]                  ;Y(行)
    32 00000221 C1E708              <1>         shl     edi, 8                          ;EDI = Y * 256;
    33 00000224 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA0000]  ;EDI = Y * 4 + Y;
    34 0000022B 037D08              <1>         add     edi, [ebp + 8]                  ;X(列)
    35                              <1> 
    36                              <1>         ;---------------------------------------
    37                              <1>         ;1文字文のフォントを出力
    38                              <1>         ;---------------------------------------
    39 0000022E 0FB75D10            <1>         movzx   ebx, word [ebp +16]             ; //表示色
    40                              <1> 
    41 00000232 6A03E817FFFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03        ;//読み込みプレーン:輝度(I)
    41 0000023B C404                <1>
    42 0000023D 6A08E829FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08       ;//書き込みプレーン:輝度(I)
    42 00000246 C404                <1>
    43 00000248 536A085756E838FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x08, ebx
    43 00000251 FF6683C410          <1>
    44                              <1>         
    45 00000256 6A02E8F3FEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02        ;//読み込みプレーン:赤(R)
    45 0000025F C404                <1>
    46 00000261 6A04E805FFFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04       ;//書き込みプレーン:赤(R)
    46 0000026A C404                <1>
    47 0000026C 536A045756E814FFFF- <1>         cdecl   vram_font_copy, esi, edi, 0x04, ebx
    47 00000275 FF6683C410          <1>
    48                              <1> 
    49 0000027A 6A01E8CFFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01        ;//読み込みプレーン:緑(G)
    49 00000283 C404                <1>
    50 00000285 6A02E8E1FEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02       ;//書き込みプレーン:緑(G)
    50 0000028E C404                <1>
    51 00000290 536A025756E8F0FEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x02, ebx
    51 00000299 FF6683C410          <1>
    52                              <1> 
    53 0000029E 6A00E8ABFEFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00        ;//読み込みプレーン:青(B)
    53 000002A7 C404                <1>
    54 000002A9 6A01E8BDFEFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01       ;//書き込みプレーン:青(B)
    54 000002B2 C404                <1>
    55 000002B4 536A015756E8CCFEFF- <1>         cdecl   vram_font_copy, esi, edi, 0x01, ebx
    55 000002BD FF6683C410          <1>
    56                              <1> 
    57                              <1>         ;---------------------------------------
    58                              <1>         ;レジスタの復帰
    59                              <1>         ;---------------------------------------
    60 000002C2 5E                  <1>         pop     esi
    61 000002C3 5F                  <1>         pop     edi
    62 000002C4 5B                  <1>         pop     ebx
    63                              <1> 
    64                              <1>         ;---------------------------------------
    65                              <1>         ;スタックフレームの破棄
    66                              <1>         ;---------------------------------------
    67 000002C5 89EC                <1>         mov     esp, ebp
    68 000002C7 5D                  <1>         pop     ebp
    69                              <1> 
    70 000002C8 C3                  <1>         ret
    78                                  %include        "..\modules\protect\draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 000002C9 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 000002CA 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 000002CC 50                  <1>         push    eax
    15 000002CD 53                  <1>         push    ebx
    16 000002CE 51                  <1>         push    ecx
    17 000002CF 57                  <1>         push    edi
    18 000002D0 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;コピー元フォントアドレスを設定
    22                              <1>         ;---------------------------------------
    23 000002D1 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = X(列)
    24 000002D4 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y(行)
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;コピー先アドレスを取得
    28                              <1>         ;---------------------------------------
    29 000002D7 B900000000          <1>         mov     ecx, 0                          ;for(ECX = 0;
    30 000002DC 81F900010000        <1> .10L:   cmp     ecx, 256                        ;    ECX < 256;
    31 000002E2 731F                <1>         jae     .10E                            ;
    32                              <1>                                                 ;    ECX++)
    33                              <1>                                                 ;{
    34                              <1>         ;---------------------------------------
    35                              <1>         ;表示する桁位置を計算
    36                              <1>         ;---------------------------------------
    37 000002E4 89C8                <1>         mov     eax, ecx                        ;   EAX = ECX;
    38 000002E6 83E00F              <1>         and     eax, 0x0F                       ;   EAX &= 0x0F;
    39 000002E9 01F0                <1>         add     eax, esi                        ;   EAX += X;
    40                              <1>         ;---------------------------------------
    41                              <1>         ;表示する行位置を計算
    42                              <1>         ;---------------------------------------
    43 000002EB 89CB                <1>         mov     ebx, ecx                        ;   EBX = ECX;
    44 000002ED C1EB04              <1>         shr     ebx, 4                          ;   EBX /= 16;
    45 000002F0 01FB                <1>         add     ebx, edi                        ;   EBX += Y;
    46                              <1>         
    47 000002F2 516A075350E80FFFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx  ;   draw_char();
    47 000002FB FF6683C410          <1>
    48                              <1> 
    49 00000300 41                  <1>         inc     ecx                             ;   //for(... ECX++)
    50 00000301 EBD9                <1>         jmp     .10L                            ;
    51                              <1> .10E:                                           ;}
    52                              <1> 
    53                              <1>         ;---------------------------------------
    54                              <1>         ;レジスタの復帰
    55                              <1>         ;---------------------------------------
    56 00000303 5E                  <1>         pop     esi
    57 00000304 5F                  <1>         pop     edi
    58 00000305 59                  <1>         pop     ecx
    59 00000306 5B                  <1>         pop     ebx
    60 00000307 58                  <1>         pop     eax
    61                              <1> 
    62                              <1>         ;---------------------------------------
    63                              <1>         ;スタックフレームの破棄
    64                              <1>         ;---------------------------------------
    65 00000308 89EC                <1>         mov     esp, ebp
    66 0000030A 5D                  <1>         pop     ebp
    67                              <1> 
    68 0000030B C3                  <1>         ret
    79                                  %include        "..\modules\protect\draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 0000030C 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 0000030D 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 0000030F 50                  <1>         push    eax
    15 00000310 53                  <1>         push    ebx
    16 00000311 51                  <1>         push    ecx
    17 00000312 52                  <1>         push    edx
    18 00000313 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;引数を変数に代入
    22                              <1>         ;---------------------------------------
    23 00000314 8B4D08              <1>         mov     ecx, [ebp + 8]                  ;ECX = 列;
    24 00000317 8B550C              <1>         mov     edx, [ebp +12]                  ;EDX = 行;
    25 0000031A 0FB75D10            <1>         movzx   ebx, word [ebp + 16]            ;EBX = 表示色;
    26 0000031E 8B7514              <1>         mov     esi, [ebp +20]                  ;ESI = 文字列へのアドレス;
    27                              <1> 
    28                              <1>         ;---------------------------------------
    29                              <1>         ;文字列を表示
    30                              <1>         ;---------------------------------------
    31 00000321 FC                  <1>         cld                                     ;DF = 0; //アドレス加算
    32                              <1> .10L:                                           ;do
    33                              <1>                                                 ;{
    34 00000322 AC                  <1>         lodsb                                   ;   AL = *ESI++;
    35 00000323 3C00                <1>         cmp     al, 0                           ;   if(0 == AL)
    36 00000325 7425                <1>         je  .10E                                ;       break;
    37                              <1> 
    38 00000327 50535251E8DBFEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    38 00000330 6683C410            <1>
    39                              <1> 
    40                              <1>         ;---------------------------------------
    41                              <1>         ;文字の表示位置を更新
    42                              <1>         ;---------------------------------------
    43 00000334 41                  <1>         inc     ecx                             ;   ECX++; //列を加算
    44 00000335 83F950              <1>         cmp     ecx, 80                         ;   if(80 <= ECX) //80文字以上?
    45 00000338 7C10                <1>         jl      .12E                            ;   {
    46 0000033A B900000000          <1>         mov     ecx, 0                          ;       ECX = 0; //列を初期化
    47 0000033F 42                  <1>         inc     edx                             ;       EDX++; //行を加算
    48 00000340 83FA1E              <1>         cmp     edx, 30                         ;       if(30 <= EDX) //30行以上?
    49 00000343 7C05                <1>         jl      .12E                            ;       {
    50 00000345 BA00000000          <1>         mov     edx, 0                          ;           EDX = 0;
    51                              <1>                                                 ;       }
    52                              <1> .12E:                                           ;   }
    53 0000034A EBD6                <1>         jmp     .10L                            ;
    54                              <1> .10E:                                           ;}while(1);
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;レジスタの復帰
    58                              <1>         ;---------------------------------------
    59 0000034C 5E                  <1>         pop     esi
    60 0000034D 5A                  <1>         pop     edx
    61 0000034E 59                  <1>         pop     ecx
    62 0000034F 5B                  <1>         pop     ebx
    63 00000350 58                  <1>         pop     eax
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;スタックフレームの破棄
    67                              <1>         ;---------------------------------------
    68 00000351 89EC                <1>         mov     esp, ebp
    69 00000353 5D                  <1>         pop     ebp
    70                              <1> 
    71 00000354 C3                  <1>         ret
    80                                  %include        "..\modules\protect\draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +12| Y(行)
     6                              <1>                                             ;   + 8| X(列)
     7                              <1>                                             ;   + 4| IP(戻り番号)
     8 00000355 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
     9 00000356 89E5                <1>         mov    ebp, esp                     ;------|---------
    10                              <1> 
    11                              <1>         ;-----------------------------------
    12                              <1>         ;レジスタの保存
    13                              <1>         ;-----------------------------------
    14 00000358 50                  <1>         push    eax
    15 00000359 53                  <1>         push    ebx
    16 0000035A 51                  <1>         push    ecx
    17 0000035B 52                  <1>         push    edx
    18 0000035C 56                  <1>         push    esi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;引数を変数に代入
    22                              <1>         ;---------------------------------------
    23 0000035D 8B7508              <1>         mov     esi, [ebp + 8]                  ;ESI = X(列)
    24 00000360 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y(行)
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;カラーバーを表示
    28                              <1>         ;---------------------------------------
    29 00000363 B900000000          <1>         mov     ecx, 0                          ;for(ECX = 0;
    30 00000368 83F910              <1> .10L:   cmp     ecx, 16                         ;    ECX < 16;
    31 0000036B 732E                <1>         jae     .10E
    32                              <1>                                                 ;ECX++)
    33                              <1>                                                 ;{
    34                              <1>         ;---------------------------------------
    35                              <1>         ;表示位置を計算(列)
    36                              <1>         ;---------------------------------------
    37 0000036D 89C8                <1>         mov     eax, ecx                        ;   EAX = ECX;
    38 0000036F 83E001              <1>         and     eax, 0x01                       ;   EAX &= 0x01;
    39 00000372 C1E003              <1>         shl     eax, 3                          ;   EAX *= 8; //8文字分乗算
    40 00000375 01F0                <1>         add     eax, esi                        ;   EAX += X;
    41                              <1> 
    42                              <1>         ;---------------------------------------
    43                              <1>         ;表示位置を計算(行)
    44                              <1>         ;---------------------------------------
    45 00000377 89CB                <1>         mov     ebx, ecx                        ;   EBX = ECX;
    46 00000379 D1EB                <1>         shr     ebx, 1                          ;   EBX /= 2;
    47 0000037B 01FB                <1>         add     ebx, edi                        ;   EBX += Y;
    48                              <1> 
    49                              <1>         ;---------------------------------------
    50                              <1>         ;描画色を計算
    51                              <1>         ;---------------------------------------
    52 0000037D 89CA                <1>         mov     edx, ecx                        ;   EDX = ECX;
    53 0000037F D1E2                <1>         shl     edx, 1                          ;   EDX *= 2;
    54 00000381 8B92[AD030000]      <1>         mov     edx, [.t0 + edx]                ;   EDX += Y;
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;カラーバーを表示
    58                              <1>         ;---------------------------------------
    59 00000387 68[A4030000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0    ;   draw_str();
    59 0000038F E878FFFFFF6683C410  <1>
    60                              <1> 
    61 00000398 41                  <1>         inc     ecx                             ;   //for(...ECX++
    62 00000399 EBCD                <1>         jmp     .10L                            ;
    63                              <1> .10E:                                           ;}
    64                              <1> 
    65                              <1>         ;---------------------------------------
    66                              <1>         ;レジスタの復帰
    67                              <1>         ;---------------------------------------
    68 0000039B 5E                  <1>         pop     esi
    69 0000039C 5A                  <1>         pop     edx
    70 0000039D 59                  <1>         pop     ecx
    71 0000039E 5B                  <1>         pop     ebx
    72 0000039F 58                  <1>         pop     eax
    73                              <1> 
    74                              <1>         ;---------------------------------------
    75                              <1>         ;スタックフレームの破棄
    76                              <1>         ;---------------------------------------
    77 000003A0 89EC                <1>         mov     esp, ebp
    78 000003A2 5D                  <1>         pop     ebp
    79                              <1> 
    80 000003A3 C3                  <1>         ret
    81                              <1> 
    82                              <1>         ;---------------------------------------
    83                              <1>         ;データ
    84                              <1>         ;---------------------------------------
    85 000003A4 202020202020202000  <1> .s0:    db  '        ', 0                       ;8文字分のスペース(表示色だけを変更)
    86                              <1> 
    87 000003AD 00000008            <1> .t0:    dw  0x0000, 0x0800                      ;カラーバーの背景色
    88 000003B1 00010009            <1>         dw  0x0100, 0x0900
    89 000003B5 0002000A            <1>         dw  0x0200, 0x0A00
    90 000003B9 0003000B            <1>         dw  0x0300, 0x0B00
    91 000003BD 0004000C            <1>         dw  0x0400, 0x0C00
    92 000003C1 0005000D            <1>         dw  0x0500, 0x0D00
    93 000003C5 0006000E            <1>         dw  0x0600, 0x0E00
    94 000003C9 0007000F            <1>         dw  0x0700, 0x0F00
    81                                  %include        "..\modules\protect\draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;-----------------------------------
     3                              <1>         ;スタックフレームの構築
     4                              <1>         ;-----------------------------------
     5                              <1>                                             ;   +16| 色
     6                              <1>                                             ;   +12| Y(行)
     7                              <1>                                             ;   + 8| X(列)
     8                              <1>                                             ;   + 4| IP(戻り番号)
     9 000003CD 55                  <1>         push   ebp                          ;EBP+ 0| EBP(元の値)
    10 000003CE 89E5                <1>         mov    ebp, esp                     ;------|---------
    11                              <1> 
    12                              <1>         ;-----------------------------------
    13                              <1>         ;レジスタの保存
    14                              <1>         ;-----------------------------------
    15 000003D0 50                  <1>         push    eax
    16 000003D1 53                  <1>         push    ebx
    17 000003D2 51                  <1>         push    ecx
    18 000003D3 57                  <1>         push    edi
    19                              <1> 
    20                              <1>         ;---------------------------------------
    21                              <1>         ;描画位置のメモリアドレスを計算
    22                              <1>         ;---------------------------------------
    23                              <1>         ;---------------------------------------
    24                              <1>         ;Y座標を80倍する(640/8)
    25                              <1>         ;---------------------------------------
    26 000003D4 8B7D0C              <1>         mov     edi, [ebp +12]                  ;EDI = Y座標;
    27 000003D7 C1E704              <1>         shl     edi, 4                          ;EDI *= 16;
    28 000003DA 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000] ;EDI = 0xA_0000[EDI * 4 + EDI];
    29                              <1>         
    30                              <1>         ;---------------------------------------
    31                              <1>         ;X座標を1/8して加算
    32                              <1>         ;---------------------------------------
    33 000003E1 8B5D08              <1>         mov     ebx, [ebp + 8]                  ;EBX = X座標;
    34 000003E4 89D9                <1>         mov     ecx, ebx                        ;ECX = X座標; //一時保存
    35 000003E6 C1EB03              <1>         shr     ebx, 3                          ;EBX /= 8;
    36 000003E9 01DF                <1>         add     edi, ebx                        ;EDI += EBX;
    37                              <1> 
    38                              <1>         ;---------------------------------------
    39                              <1>         ;X座標を8で割った余りからビット位置を計算(出力ビットパターン)
    40                              <1>         ;(0=0x80, 1=0x40,... 7=0x01)
    41                              <1>         ;---------------------------------------
    42 000003EB 83E107              <1>         and     ecx, 0x07                       ;ECX = X & 0x07;
    43 000003EE BB80000000          <1>         mov     ebx, 0x80                       ;EBX = 0x80;
    44 000003F3 D3EB                <1>         shr     ebx, cl                         ;EBX >>= ECX;
    45                              <1> 
    46                              <1>         ;---------------------------------------
    47                              <1>         ;色を指定
    48                              <1>         ;---------------------------------------
    49 000003F5 8B4D10              <1>         mov     ecx, [ebp +16]                  ;表示色
    50                              <1> 
    51                              <1>         ;---------------------------------------
    52                              <1>         ;プレーンごとに出力
    53                              <1>         ;---------------------------------------
    54 000003F8 6A03E851FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x03        ;輝度(I)プレーンを選択
    54 00000401 C404                <1>
    55 00000403 6A08E863FDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x08       ;輝度(I)プレーンを選択
    55 0000040C C404                <1>
    56 0000040E 516A085753E8C5FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x08, ecx
    56 00000417 FF6683C410          <1>
    57                              <1> 
    58 0000041C 6A02E82DFDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x02        ;赤(R)プレーンを選択
    58 00000425 C404                <1>
    59 00000427 6A04E83FFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x04       ;赤(R)プレーンを選択
    59 00000430 C404                <1>
    60 00000432 516A045753E8A1FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x04, ecx
    60 0000043B FF6683C410          <1>
    61                              <1> 
    62 00000440 6A01E809FDFFFF6683- <1>         cdecl   vga_set_read_plane, 0x01        ;緑(G)プレーンを選択
    62 00000449 C404                <1>
    63 0000044B 6A02E81BFDFFFF6683- <1>         cdecl   vga_set_write_plane, 0x02       ;緑(G)プレーンを選択
    63 00000454 C404                <1>
    64 00000456 516A025753E87DFDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x02, ecx
    64 0000045F FF6683C410          <1>
    65                              <1> 
    66 00000464 6A00E8E5FCFFFF6683- <1>         cdecl   vga_set_read_plane, 0x00        ;青(B)プレーンを選択
    66 0000046D C404                <1>
    67 0000046F 6A01E8F7FCFFFF6683- <1>         cdecl   vga_set_write_plane, 0x01       ;青(B)プレーンを選択
    67 00000478 C404                <1>
    68 0000047A 516A015753E859FDFF- <1>         cdecl   vram_bit_copy, ebx, edi, 0x01, ecx
    68 00000483 FF6683C410          <1>
    69                              <1> 
    70                              <1>         ;---------------------------------------
    71                              <1>         ;レジスタの復帰
    72                              <1>         ;---------------------------------------
    73 00000488 5F                  <1>         pop     edi
    74 00000489 59                  <1>         pop     ecx
    75 0000048A 5B                  <1>         pop     ebx
    76 0000048B 58                  <1>         pop     eax
    77                              <1> 
    78                              <1>         ;---------------------------------------
    79                              <1>         ;スタックフレームの破棄
    80                              <1>         ;---------------------------------------
    81 0000048C 89EC                <1>         mov     esp, ebp
    82 0000048E 5D                  <1>         pop     ebp
    83                              <1> 
    84 0000048F C3                  <1>         ret
    82                                  
    83                                  ;********************************************************************************************************
    84                                  ;パディング
    85                                  ;********************************************************************************************************
    86 00000490 00<rept>                        times KERNEL_SIZE - ($ - $$)    db 0    ;パディング
